<?xml version="1.0" encoding="UTF-8"?>
<cpp:CppNamespace xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:cpp="http://www.dfki.de/SPECifIC/emf/2015/cpp" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore"
    name="std" nsURI="http://www.dfki.de/SPECifIC/cpp/std">
  <eClassifiers xsi:type="cpp:CppClass" name="__true_type"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__false_type"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__truth_type">
    <typedefs eClassifier="#//__false_type" name="__type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__traitor"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__are_same">
    <typedefs eClassifier="#//__false_type" name="__type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_void">
    <typedefs eClassifier="#//__false_type" name="__type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_integer">
    <typedefs eClassifier="#//__false_type" name="__type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_floating">
    <typedefs eClassifier="#//__false_type" name="__type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_pointer">
    <typedefs eClassifier="#//__false_type" name="__type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_arithmetic">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_scalar">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_char">
    <typedefs eClassifier="#//__false_type" name="__type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_byte">
    <typedefs eClassifier="#//__false_type" name="__type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_move_iterator">
    <typedefs eClassifier="#//__false_type" name="__type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="exception"/>
  <eClassifiers xsi:type="cpp:CppClass" name="bad_exception" eSuperTypes="#//exception"/>
  <eClassifiers xsi:type="cpp:CppClass" name="integral_constant">
    <eTypeParameters name="_Tp"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="value" static="true">
      <eGenericType eTypeParameter="#//integral_constant/_Tp"/>
    </eStructuralFeatures>
    <typedefs eTypeParameter="#//integral_constant/_Tp" name="value_type"/>
    <typedefs eClassifier="#//integral_constant" name="type">
      <eTypeArguments eTypeParameter="#//integral_constant/_Tp"/>
    </typedefs>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="conditional">
    <eTypeParameters name="_Iftrue"/>
    <typedefs eTypeParameter="#//conditional/_Iftrue" name="type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__or_"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__and_"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__not_"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__nonesuch"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__success_type">
    <eTypeParameters name="_Tp"/>
    <typedefs eTypeParameter="#//__success_type/_Tp" name="type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__failure_type"/>
  <eClassifiers xsi:type="cpp:CppClass" name="remove_cv">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_void_helper" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="is_void">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_integral_helper" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="is_integral">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_floating_point_helper" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="is_floating_point">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_array" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_pointer_helper" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="is_pointer">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_lvalue_reference" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="is_rvalue_reference" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="is_function" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_member_object_pointer_helper" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="is_member_object_pointer">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_member_function_pointer_helper"
      eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="is_member_function_pointer">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_enum">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_union">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_class">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_null_pointer_helper" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="is_null_pointer">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_nullptr_t">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_reference">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_arithmetic">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_fundamental">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_object">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_member_pointer">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_scalar">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_compound">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_member_pointer_helper" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_referenceable">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_const" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="is_volatile" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="is_trivial">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_trivially_copyable">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_standard_layout">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_pod">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_literal_type">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_empty">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_polymorphic">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_abstract">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_signed_helper" eSuperTypes="#//integral_constant">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_signed">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_unsigned">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="add_rvalue_reference">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="extent" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="remove_all_extents">
    <eTypeParameters name="_Tp"/>
    <typedefs eTypeParameter="#//remove_all_extents/_Tp" name="type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_array_known_bounds">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_array_unknown_bounds">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__do_is_destructible_impl"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_destructible_impl">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_destructible_safe">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_destructible">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__do_is_nt_destructible_impl"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_nt_destructible_impl">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_nt_destructible_safe">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_nothrow_destructible">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__do_is_default_constructible_impl"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_default_constructible_impl">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_default_constructible_atom">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_default_constructible_safe">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_default_constructible">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__do_is_static_castable_impl"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_static_castable_impl">
    <eTypeParameters name="_From"/>
    <eTypeParameters name="_To"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_static_castable_safe">
    <eTypeParameters name="_From"/>
    <eTypeParameters name="_To"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_static_castable">
    <eTypeParameters name="_From"/>
    <eTypeParameters name="_To"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__do_is_direct_constructible_impl"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_direct_constructible_impl">
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Arg"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_direct_constructible_new_safe">
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Arg"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_same" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="is_base_of">
    <eTypeParameters name="_Base"/>
    <eTypeParameters name="_Derived"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="remove_reference">
    <eTypeParameters name="_Tp"/>
    <typedefs eTypeParameter="#//remove_reference/_Tp" name="type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_base_to_derived_ref">
    <eTypeParameters name="_From"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_constructible">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_lvalue_to_rvalue_ref">
    <eTypeParameters name="_From"/>
    <eTypeParameters name="_To"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_direct_constructible_ref_cast">
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Arg"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_direct_constructible_new">
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Arg"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_direct_constructible">
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Arg"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__do_is_nary_constructible_impl"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_nary_constructible_impl">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_nary_constructible">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_constructible_impl">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_copy_constructible_impl">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_copy_constructible">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_move_constructible_impl">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_move_constructible">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_nt_default_constructible_atom">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_nt_default_constructible_impl">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_nothrow_default_constructible">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_nt_constructible_impl">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_nothrow_constructible">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_nothrow_copy_constructible_impl">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_nothrow_copy_constructible">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_nothrow_move_constructible_impl">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_nothrow_move_constructible">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_assignable_helper">
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Up"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_assignable">
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Up"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_copy_assignable_impl">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_copy_assignable">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_move_assignable_impl">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_move_assignable">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_nt_assignable_impl">
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Up"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_nothrow_assignable">
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Up"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_nt_copy_assignable_impl">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_nothrow_copy_assignable">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_nt_move_assignable_impl">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_nothrow_move_assignable">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_trivially_constructible">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_trivially_default_constructible">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__do_is_implicitly_default_constructible_impl">
    <eOperations xsi:type="cpp:CppOperation" name="__test" static="true" typedef="#//false_type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_implicitly_default_constructible_impl">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_implicitly_default_constructible_safe">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_implicitly_default_constructible">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_trivially_copy_constructible">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_trivially_move_constructible">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_trivially_assignable">
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Up"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_trivially_copy_assignable">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_trivially_move_assignable">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_trivially_destructible">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="has_trivial_default_constructor">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="has_trivial_copy_constructor">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="has_trivial_copy_assign">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="has_virtual_destructor">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="alignment_of">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="rank" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_convertible_helper">
    <eTypeParameters name="_From"/>
    <eTypeParameters name="_To"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_convertible">
    <eTypeParameters name="_From"/>
    <eTypeParameters name="_To"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="remove_const">
    <eTypeParameters name="_Tp"/>
    <typedefs eTypeParameter="#//remove_const/_Tp" name="type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="remove_volatile">
    <eTypeParameters name="_Tp"/>
    <typedefs eTypeParameter="#//remove_volatile/_Tp" name="type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="add_const">
    <eTypeParameters name="_Tp"/>
    <typedefs eTypeParameter="#//add_const/_Tp" name="type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="add_volatile">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="add_cv">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__add_lvalue_reference_helper">
    <eTypeParameters name="_Tp"/>
    <typedefs eTypeParameter="#//__add_lvalue_reference_helper/_Tp" name="type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="add_lvalue_reference">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__add_rvalue_reference_helper">
    <eTypeParameters name="_Tp"/>
    <typedefs eTypeParameter="#//__add_rvalue_reference_helper/_Tp" name="type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__cv_selector"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__match_cv_qualifiers">
    <eTypeParameters name="_Qualified"/>
    <eTypeParameters name="_Unqualified"/>
    <typedefs eClassifier="#//__cv_selector" name="__match">
      <eTypeArguments eTypeParameter="#//__match_cv_qualifiers/_Unqualified"/>
    </typedefs>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__make_unsigned">
    <eTypeParameters name="_Tp"/>
    <typedefs eTypeParameter="#//__make_unsigned/_Tp" name="__type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__make_unsigned_selector">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="make_unsigned">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__make_signed">
    <eTypeParameters name="_Tp"/>
    <typedefs eTypeParameter="#//__make_signed/_Tp" name="__type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__make_signed_selector">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="make_signed">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="remove_extent">
    <eTypeParameters name="_Tp"/>
    <typedefs eTypeParameter="#//remove_extent/_Tp" name="type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__remove_pointer_helper">
    <eTypeParameters name="_Tp"/>
    <typedefs eTypeParameter="#//__remove_pointer_helper/_Tp" name="type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="remove_pointer">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__add_pointer_helper">
    <eTypeParameters name="_Tp"/>
    <typedefs eTypeParameter="#//__add_pointer_helper/_Tp" name="type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="add_pointer">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__aligned_storage_msa"/>
  <eClassifiers xsi:type="cpp:CppClass" name="aligned_storage"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__strictest_alignment">
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_alignment" static="true"
        typedef="#//size_t"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_size" static="true"
        typedef="#//size_t"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="aligned_union">
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_len" visibility="private"
        static="true" typedef="#//size_t"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="alignment_value" visibility="public"
        static="true" typedef="#//size_t"/>
    <typedefs eClassifier="#//__strictest_alignment" name="__strictest" visibility="private"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__decay_selector">
    <eTypeParameters name="_Up"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="decay">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="reference_wrapper">
    <eTypeParameters name="_Tp"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_data">
      <eGenericType eTypeParameter="#//reference_wrapper/_Tp"/>
    </eStructuralFeatures>
    <typedefs eTypeParameter="#//reference_wrapper/_Tp" name="type" visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__strip_reference_wrapper">
    <eTypeParameters name="_Tp"/>
    <typedefs eTypeParameter="#//__strip_reference_wrapper/_Tp" name="__type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__decay_and_strip">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="enable_if"/>
  <eClassifiers xsi:type="cpp:CppClass" name="common_type"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__do_common_type_impl"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__common_type_impl">
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Up"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__do_member_type_wrapper"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__member_type_wrapper">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__expanded_common_type_wrapper">
    <typedefs eClassifier="#//common_type" name="type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="underlying_type">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__declval_protector">
    <eTypeParameters name="_Tp"/>
    <eOperations xsi:type="cpp:CppOperation" name="__delegate" static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="__stop" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        static="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="result_of"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__invoke_memfun_ref"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__invoke_memfun_deref"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__invoke_memobj_ref"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__invoke_memobj_deref"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__invoke_other"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__result_of_success">
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Tag"/>
    <typedefs eTypeParameter="#//__result_of_success/_Tag" name="__invoke_type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__result_of_memfun_ref_impl"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__result_of_memfun_ref">
    <eTypeParameters name="_MemPtr"/>
    <eTypeParameters name="_Arg"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__result_of_memfun_deref_impl"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__result_of_memfun_deref">
    <eTypeParameters name="_MemPtr"/>
    <eTypeParameters name="_Arg"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__result_of_memobj_ref_impl"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__result_of_memobj_ref">
    <eTypeParameters name="_MemPtr"/>
    <eTypeParameters name="_Arg"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__result_of_memobj_deref_impl"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__result_of_memobj_deref">
    <eTypeParameters name="_MemPtr"/>
    <eTypeParameters name="_Arg"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__result_of_memobj"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__result_of_memfun"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__result_of_impl">
    <typedefs eClassifier="#//__failure_type" name="type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__result_of_other_impl"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__detector">
    <eTypeParameters name="_Default"/>
    <typedefs eClassifier="#//integral_constant" name="value_t">
      <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"/>
    </typedefs>
    <typedefs eTypeParameter="#//__detector/_Default" name="type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_swappable">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_nothrow_swappable">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_swappable_impl">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_nothrow_swappable_impl">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__move_if_noexcept_cond">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="nested_exception">
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_ptr"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Nested_exception" eSuperTypes="#//nested_exception">
    <eTypeParameters name="_Except"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="allocator">
    <eTypeParameters name="_Tp"/>
    <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//unsigned%20long%20int"
        name="size_type" visibility="public"/>
    <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20int"
        name="difference_type" visibility="public"/>
    <typedefs eTypeParameter="#//allocator/_Tp" name="pointer" visibility="public"/>
    <typedefs eTypeParameter="#//allocator/_Tp" name="const_pointer" visibility="public"/>
    <typedefs eTypeParameter="#//allocator/_Tp" name="reference" visibility="public"/>
    <typedefs eTypeParameter="#//allocator/_Tp" name="const_reference" visibility="public"/>
    <typedefs eTypeParameter="#//allocator/_Tp" name="value_type" visibility="public"/>
    <typedefs eClassifier="#//integral_constant" name="propagate_on_container_move_assignment"
        visibility="public">
      <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"/>
    </typedefs>
    <typedefs eClassifier="#//integral_constant" name="is_always_equal" visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="uses_allocator">
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Alloc"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="char_traits">
    <eTypeParameters name="_CharT"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="fpos">
    <eTypeParameters name="_StateT"/>
    <eOperations xsi:type="cpp:CppOperation" name="state" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__st">
        <eGenericType eTypeParameter="#//fpos/_StateT"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_off" visibility="private"
        typedef="#//streamoff"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_state" visibility="private">
      <eGenericType eTypeParameter="#//fpos/_StateT"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="basic_ios" eSuperTypes="#//ios_base">
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_Traits"/>
    <eOperations xsi:type="cpp:CppOperation" name="clear" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="setstate" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__state" typedef="#//ios_base/iostate"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_setstate" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__state" typedef="#//ios_base/iostate"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="exceptions" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__except" typedef="#//ios_base/iostate"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="fill" visibility="public" typedef="#//basic_ios/char_type">
      <eParameters xsi:type="cpp:CppParameter" name="__ch" typedef="#//basic_ios/char_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="imbue" eType="#//locale" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__loc" eType="#//locale"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="init" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__sb">
        <eGenericType eClassifier="#//basic_streambuf">
          <eTypeArguments eTypeParameter="#//basic_ios/_CharT"/>
          <eTypeArguments eTypeParameter="#//basic_ios/_Traits"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="move" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__rhs">
        <eGenericType eClassifier="#//basic_ios">
          <eTypeArguments eTypeParameter="#//basic_ios/_CharT"/>
          <eTypeArguments eTypeParameter="#//basic_ios/_Traits"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="move" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__rhs">
        <eGenericType eClassifier="#//basic_ios">
          <eTypeArguments eTypeParameter="#//basic_ios/_CharT"/>
          <eTypeArguments eTypeParameter="#//basic_ios/_Traits"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="set_rdbuf" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__sb">
        <eGenericType eClassifier="#//basic_streambuf">
          <eTypeArguments eTypeParameter="#//basic_ios/_CharT"/>
          <eTypeArguments eTypeParameter="#//basic_ios/_Traits"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_cache_locale" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__loc" eType="#//locale"/>
    </eOperations>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_tie" visibility="public">
      <eGenericType eClassifier="#//basic_ostream">
        <eTypeArguments eTypeParameter="#//basic_ios/_CharT"/>
        <eTypeArguments eTypeParameter="#//basic_ios/_Traits"/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_fill" visibility="public"
        typedef="#//basic_ios/char_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_fill_init" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_streambuf" visibility="public">
      <eGenericType eClassifier="#//basic_streambuf">
        <eTypeArguments eTypeParameter="#//basic_ios/_CharT"/>
        <eTypeArguments eTypeParameter="#//basic_ios/_Traits"/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_ctype" visibility="public"
        typedef="#//basic_ios/__ctype_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_num_put" visibility="public"
        typedef="#//basic_ios/__num_put_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_num_get" visibility="public"
        typedef="#//basic_ios/__num_get_type"/>
    <typedefs eTypeParameter="#//basic_ios/_CharT" name="char_type" visibility="public"/>
    <typedefs eTypeParameter="#//basic_ios/_Traits" name="traits_type" visibility="public"/>
    <typedefs eClassifier="#//ctype" name="__ctype_type" visibility="public">
      <eTypeArguments eTypeParameter="#//basic_ios/_CharT"/>
    </typedefs>
    <typedefs eClassifier="#//num_put" name="__num_put_type" visibility="public">
      <eTypeArguments eTypeParameter="#//basic_ios/_CharT"/>
    </typedefs>
    <typedefs eClassifier="#//num_get" name="__num_get_type" visibility="public">
      <eTypeArguments eTypeParameter="#//basic_ios/_CharT"/>
    </typedefs>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="basic_streambuf">
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_Traits"/>
    <eOperations xsi:type="cpp:CppOperation" name="pubimbue" eType="#//locale" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__loc" eType="#//locale"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="pubseekoff" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__off"/>
      <eParameters xsi:type="cpp:CppParameter" name="__way" typedef="#//ios_base/seekdir"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="pubseekpos" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__sp"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="pubsync" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="in_avail" visibility="public" typedef="#//streamsize"/>
    <eOperations xsi:type="cpp:CppOperation" name="snextc" visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="sbumpc" visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="sgetc" visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="sgetn" visibility="public" typedef="#//streamsize">
      <eParameters xsi:type="cpp:CppParameter" name="__s" typedef="#//basic_streambuf/char_type"/>
      <eParameters xsi:type="cpp:CppParameter" name="__n" typedef="#//streamsize"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="sputbackc" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__c" typedef="#//basic_streambuf/char_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="sungetc" visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="sputc" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__c" typedef="#//basic_streambuf/char_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="sputn" visibility="public" typedef="#//streamsize">
      <eParameters xsi:type="cpp:CppParameter" name="__s" typedef="#//basic_streambuf/char_type"/>
      <eParameters xsi:type="cpp:CppParameter" name="__n" typedef="#//streamsize"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="gbump" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="setg" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__gbeg" typedef="#//basic_streambuf/char_type"/>
      <eParameters xsi:type="cpp:CppParameter" name="__gnext" typedef="#//basic_streambuf/char_type"/>
      <eParameters xsi:type="cpp:CppParameter" name="__gend" typedef="#//basic_streambuf/char_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="pbump" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="setp" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__pbeg" typedef="#//basic_streambuf/char_type"/>
      <eParameters xsi:type="cpp:CppParameter" name="__pend" typedef="#//basic_streambuf/char_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="stossc" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="__safe_gbump" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n" typedef="#//streamsize"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="__safe_pbump" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n" typedef="#//streamsize"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="swap" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__sb">
        <eGenericType eClassifier="#//basic_streambuf">
          <eTypeArguments eTypeParameter="#//basic_streambuf/_CharT"/>
          <eTypeArguments eTypeParameter="#//basic_streambuf/_Traits"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_in_beg" visibility="public"
        typedef="#//basic_streambuf/char_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_in_cur" visibility="public"
        typedef="#//basic_streambuf/char_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_in_end" visibility="public"
        typedef="#//basic_streambuf/char_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_out_beg" visibility="public"
        typedef="#//basic_streambuf/char_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_out_cur" visibility="public"
        typedef="#//basic_streambuf/char_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_out_end" visibility="public"
        typedef="#//basic_streambuf/char_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_buf_locale" eType="#//locale"
        visibility="public"/>
    <typedefs eTypeParameter="#//basic_streambuf/_CharT" name="char_type" visibility="public"/>
    <typedefs eTypeParameter="#//basic_streambuf/_Traits" name="traits_type" visibility="public"/>
    <typedefs eClassifier="#//basic_streambuf" name="__streambuf_type" visibility="public">
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//basic_streambuf/char_type"/>
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//basic_streambuf/traits_type"/>
    </typedefs>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="basic_istream">
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_Traits"/>
    <eOperations xsi:type="cpp:CppOperation" name="get" visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="peek" visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="readsome" visibility="public" typedef="#//streamsize">
      <eParameters xsi:type="cpp:CppParameter" name="__s" typedef="#//basic_istream/char_type"/>
      <eParameters xsi:type="cpp:CppParameter" name="__n" typedef="#//streamsize"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="sync" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="tellg" visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="swap" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__rhs">
        <eGenericType eClassifier="#//basic_istream">
          <eTypeArguments eTypeParameter="#//basic_istream/_CharT"/>
          <eTypeArguments eTypeParameter="#//basic_istream/_Traits"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_gcount" visibility="public"
        typedef="#//streamsize"/>
    <typedefs eTypeParameter="#//basic_istream/_CharT" name="char_type" visibility="public"/>
    <typedefs eTypeParameter="#//basic_istream/_Traits" name="traits_type" visibility="public"/>
    <typedefs eClassifier="#//basic_streambuf" name="__streambuf_type" visibility="public">
      <eTypeArguments eTypeParameter="#//basic_istream/_CharT"/>
      <eTypeArguments eTypeParameter="#//basic_istream/_Traits"/>
    </typedefs>
    <typedefs eClassifier="#//basic_ios" name="__ios_type" visibility="public">
      <eTypeArguments eTypeParameter="#//basic_istream/_CharT"/>
      <eTypeArguments eTypeParameter="#//basic_istream/_Traits"/>
    </typedefs>
    <typedefs eClassifier="#//basic_istream" name="__istream_type" visibility="public">
      <eTypeArguments eTypeParameter="#//basic_istream/_CharT"/>
      <eTypeArguments eTypeParameter="#//basic_istream/_Traits"/>
    </typedefs>
    <typedefs eClassifier="#//num_get" name="__num_get_type" visibility="public">
      <eTypeArguments eTypeParameter="#//basic_istream/_CharT"/>
    </typedefs>
    <typedefs eClassifier="#//ctype" name="__ctype_type" visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="basic_ostream">
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_Traits"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_write" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__s" typedef="#//basic_ostream/char_type"/>
      <eParameters xsi:type="cpp:CppParameter" name="__n" typedef="#//streamsize"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="tellp" visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="swap" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__rhs">
        <eGenericType eClassifier="#//basic_ostream">
          <eTypeArguments eTypeParameter="#//basic_ostream/_CharT"/>
          <eTypeArguments eTypeParameter="#//basic_ostream/_Traits"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <typedefs eTypeParameter="#//basic_ostream/_CharT" name="char_type" visibility="public"/>
    <typedefs eTypeParameter="#//basic_ostream/_Traits" name="traits_type" visibility="public"/>
    <typedefs eClassifier="#//basic_streambuf" name="__streambuf_type" visibility="public">
      <eTypeArguments eTypeParameter="#//basic_ostream/_CharT"/>
      <eTypeArguments eTypeParameter="#//basic_ostream/_Traits"/>
    </typedefs>
    <typedefs eClassifier="#//basic_ios" name="__ios_type" visibility="public">
      <eTypeArguments eTypeParameter="#//basic_ostream/_CharT"/>
      <eTypeArguments eTypeParameter="#//basic_ostream/_Traits"/>
    </typedefs>
    <typedefs eClassifier="#//basic_ostream" name="__ostream_type" visibility="public">
      <eTypeArguments eTypeParameter="#//basic_ostream/_CharT"/>
      <eTypeArguments eTypeParameter="#//basic_ostream/_Traits"/>
    </typedefs>
    <typedefs eClassifier="#//num_put" name="__num_put_type" visibility="public">
      <eTypeArguments eTypeParameter="#//basic_ostream/_CharT"/>
    </typedefs>
    <typedefs eClassifier="#//ctype" name="__ctype_type" visibility="public">
      <eTypeArguments eTypeParameter="#//basic_ostream/_CharT"/>
    </typedefs>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="basic_iostream">
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_Traits"/>
    <eOperations xsi:type="cpp:CppOperation" name="swap" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__rhs">
        <eGenericType eClassifier="#//basic_iostream">
          <eTypeArguments eTypeParameter="#//basic_iostream/_CharT"/>
          <eTypeArguments eTypeParameter="#//basic_iostream/_Traits"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <typedefs eTypeParameter="#//basic_iostream/_CharT" name="char_type" visibility="public"/>
    <typedefs eTypeParameter="#//basic_iostream/_Traits" name="traits_type" visibility="public"/>
    <typedefs eClassifier="#//basic_istream" name="__istream_type" visibility="public">
      <eTypeArguments eTypeParameter="#//basic_iostream/_CharT"/>
      <eTypeArguments eTypeParameter="#//basic_iostream/_Traits"/>
    </typedefs>
    <typedefs eClassifier="#//basic_ostream" name="__ostream_type" visibility="public">
      <eTypeArguments eTypeParameter="#//basic_iostream/_CharT"/>
      <eTypeArguments eTypeParameter="#//basic_iostream/_Traits"/>
    </typedefs>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="basic_filebuf">
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_Traits"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_create_pback" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_destroy_pback" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="swap" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="is_open" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_allocate_internal_buffer" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_destroy_internal_buffer" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_convert_to_external" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_seek" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__off"/>
      <eParameters xsi:type="cpp:CppParameter" name="__way" typedef="#//ios_base/seekdir"/>
      <eParameters xsi:type="cpp:CppParameter" name="__state"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_get_ext_pos" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__state"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_terminate_output" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_set_buffer" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__off" typedef="#//streamsize"/>
    </eOperations>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_lock" visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_file" visibility="public"
        typedef="#//basic_filebuf/__file_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_mode" visibility="public"
        typedef="#//ios_base/openmode"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_state_beg" visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_state_cur" visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_state_last" visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_buf" visibility="public"
        typedef="#//basic_filebuf/char_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_buf_size" visibility="public"
        typedef="#//size_t"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_buf_allocated" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_reading" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_writing" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_pback" visibility="public"
        typedef="#//basic_filebuf/char_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_pback_cur_save" visibility="public"
        typedef="#//basic_filebuf/char_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_pback_end_save" visibility="public"
        typedef="#//basic_filebuf/char_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_pback_init" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_codecvt" visibility="public"
        typedef="#//basic_filebuf/__codecvt_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_ext_buf" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"
        visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_ext_buf_size" visibility="public"
        typedef="#//streamsize"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_ext_next" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"
        visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_ext_end" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"
        visibility="public"/>
    <typedefs eTypeParameter="#//basic_filebuf/_CharT" name="char_type" visibility="public"/>
    <typedefs eTypeParameter="#//basic_filebuf/_Traits" name="traits_type" visibility="public"/>
    <typedefs eClassifier="#//basic_streambuf" name="__streambuf_type" visibility="public">
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//basic_filebuf/char_type"/>
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//basic_filebuf/traits_type"/>
    </typedefs>
    <typedefs eClassifier="#//basic_filebuf" name="__filebuf_type" visibility="public">
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//basic_filebuf/char_type"/>
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//basic_filebuf/traits_type"/>
    </typedefs>
    <typedefs eClassifier="#//__basic_file" name="__file_type" visibility="public">
      <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
    </typedefs>
    <typedefs eClassifier="#//codecvt" name="__codecvt_type" visibility="public">
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//basic_filebuf/char_type"/>
      <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
    </typedefs>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="basic_ifstream">
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_Traits"/>
    <eOperations xsi:type="cpp:CppOperation" name="swap" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__rhs">
        <eGenericType eClassifier="#//basic_ifstream">
          <eTypeArguments eTypeParameter="#//basic_ifstream/_CharT"/>
          <eTypeArguments eTypeParameter="#//basic_ifstream/_Traits"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="is_open" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="open" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__s" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="open" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__s"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="close" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_filebuf" visibility="private"
        typedef="#//basic_ifstream/__filebuf_type"/>
    <typedefs eTypeParameter="#//basic_ifstream/_CharT" name="char_type" visibility="public"/>
    <typedefs eTypeParameter="#//basic_ifstream/_Traits" name="traits_type" visibility="public"/>
    <typedefs eClassifier="#//basic_filebuf" name="__filebuf_type" visibility="public">
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//basic_ifstream/char_type"/>
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//basic_ifstream/traits_type"/>
    </typedefs>
    <typedefs eClassifier="#//basic_istream" name="__istream_type" visibility="public">
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//basic_ifstream/char_type"/>
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//basic_ifstream/traits_type"/>
    </typedefs>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="basic_ofstream">
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_Traits"/>
    <eOperations xsi:type="cpp:CppOperation" name="swap" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__rhs">
        <eGenericType eClassifier="#//basic_ofstream">
          <eTypeArguments eTypeParameter="#//basic_ofstream/_CharT"/>
          <eTypeArguments eTypeParameter="#//basic_ofstream/_Traits"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="is_open" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="open" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__s" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="open" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__s"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="close" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_filebuf" visibility="private"
        typedef="#//basic_ofstream/__filebuf_type"/>
    <typedefs eTypeParameter="#//basic_ofstream/_CharT" name="char_type" visibility="public"/>
    <typedefs eTypeParameter="#//basic_ofstream/_Traits" name="traits_type" visibility="public"/>
    <typedefs eClassifier="#//basic_filebuf" name="__filebuf_type" visibility="public">
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//basic_ofstream/char_type"/>
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//basic_ofstream/traits_type"/>
    </typedefs>
    <typedefs eClassifier="#//basic_ostream" name="__ostream_type" visibility="public">
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//basic_ofstream/char_type"/>
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//basic_ofstream/traits_type"/>
    </typedefs>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="basic_fstream">
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_Traits"/>
    <eOperations xsi:type="cpp:CppOperation" name="swap" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__rhs">
        <eGenericType eClassifier="#//basic_fstream">
          <eTypeArguments eTypeParameter="#//basic_fstream/_CharT"/>
          <eTypeArguments eTypeParameter="#//basic_fstream/_Traits"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="is_open" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="open" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__s" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="open" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__s"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="close" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_filebuf" visibility="private"
        typedef="#//basic_fstream/__filebuf_type"/>
    <typedefs eTypeParameter="#//basic_fstream/_CharT" name="char_type" visibility="public"/>
    <typedefs eTypeParameter="#//basic_fstream/_Traits" name="traits_type" visibility="public"/>
    <typedefs eClassifier="#//basic_filebuf" name="__filebuf_type" visibility="public">
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//basic_fstream/char_type"/>
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//basic_fstream/traits_type"/>
    </typedefs>
    <typedefs eClassifier="#//basic_ios" name="__ios_type" visibility="public">
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//basic_fstream/char_type"/>
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//basic_fstream/traits_type"/>
    </typedefs>
    <typedefs eClassifier="#//basic_iostream" name="__iostream_type" visibility="public">
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//basic_fstream/char_type"/>
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//basic_fstream/traits_type"/>
    </typedefs>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="istreambuf_iterator">
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_Traits"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_sbuf" visibility="private"
        typedef="#//istreambuf_iterator/streambuf_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_c" visibility="private"/>
    <typedefs eTypeParameter="#//istreambuf_iterator/_CharT" name="char_type" visibility="public"/>
    <typedefs eTypeParameter="#//istreambuf_iterator/_Traits" name="traits_type" visibility="public"/>
    <typedefs eClassifier="#//basic_streambuf" name="streambuf_type" visibility="public">
      <eTypeArguments eTypeParameter="#//istreambuf_iterator/_CharT"/>
      <eTypeArguments eTypeParameter="#//istreambuf_iterator/_Traits"/>
    </typedefs>
    <typedefs eClassifier="#//basic_istream" name="istream_type" visibility="public">
      <eTypeArguments eTypeParameter="#//istreambuf_iterator/_CharT"/>
      <eTypeArguments eTypeParameter="#//istreambuf_iterator/_Traits"/>
    </typedefs>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="ostreambuf_iterator" eSuperTypes="#//iterator">
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_Traits"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_sbuf" visibility="private"
        typedef="#//ostreambuf_iterator/streambuf_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_failed" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        visibility="private"/>
    <typedefs eTypeParameter="#//ostreambuf_iterator/_CharT" name="char_type" visibility="public"/>
    <typedefs eTypeParameter="#//ostreambuf_iterator/_Traits" name="traits_type" visibility="public"/>
    <typedefs eClassifier="#//basic_streambuf" name="streambuf_type" visibility="public">
      <eTypeArguments eTypeParameter="#//ostreambuf_iterator/_CharT"/>
      <eTypeArguments eTypeParameter="#//ostreambuf_iterator/_Traits"/>
    </typedefs>
    <typedefs eClassifier="#//basic_ostream" name="ostream_type" visibility="public">
      <eTypeArguments eTypeParameter="#//ostreambuf_iterator/_CharT"/>
      <eTypeArguments eTypeParameter="#//ostreambuf_iterator/_Traits"/>
    </typedefs>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="piecewise_construct_t"/>
  <eClassifiers xsi:type="cpp:CppClass" name="tuple">
    <eOperations xsi:type="cpp:CppOperation" name="swap" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__in" eType="#//tuple"/>
    </eOperations>
    <typedefs eClassifier="#//_Tuple_impl" name="_Inherited"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Index_tuple"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_PCC">
    <eTypeParameters name="_T1"/>
    <eTypeParameters name="_T2"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="pair">
    <eTypeParameters name="_T1"/>
    <eTypeParameters name="_T2"/>
    <eOperations xsi:type="cpp:CppOperation" name="swap" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void">
      <eParameters xsi:type="cpp:CppParameter" name="__p">
        <eGenericType eClassifier="#//pair">
          <eTypeArguments eTypeParameter="#//pair/_T1"/>
          <eTypeArguments eTypeParameter="#//pair/_T2"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="first">
      <eGenericType eTypeParameter="#//pair/_T1"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="second">
      <eGenericType eTypeParameter="#//pair/_T2"/>
    </eStructuralFeatures>
    <typedefs eTypeParameter="#//pair/_T1" name="first_type"/>
    <typedefs eTypeParameter="#//pair/_T2" name="second_type"/>
    <typedefs eClassifier="#//_PCC" name="_PCCP">
      <eTypeArguments eTypeParameter="#//pair/_T1"/>
      <eTypeArguments eTypeParameter="#//pair/_T2"/>
    </typedefs>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="input_iterator_tag"/>
  <eClassifiers xsi:type="cpp:CppClass" name="output_iterator_tag"/>
  <eClassifiers xsi:type="cpp:CppClass" name="forward_iterator_tag" eSuperTypes="#//input_iterator_tag"/>
  <eClassifiers xsi:type="cpp:CppClass" name="bidirectional_iterator_tag" eSuperTypes="#//forward_iterator_tag"/>
  <eClassifiers xsi:type="cpp:CppClass" name="random_access_iterator_tag" eSuperTypes="#//bidirectional_iterator_tag"/>
  <eClassifiers xsi:type="cpp:CppClass" name="iterator">
    <eTypeParameters name="_Category"/>
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Distance"/>
    <eTypeParameters name="_Pointer"/>
    <eTypeParameters name="_Reference"/>
    <typedefs eTypeParameter="#//iterator/_Category" name="iterator_category"/>
    <typedefs eTypeParameter="#//iterator/_Tp" name="value_type"/>
    <typedefs eTypeParameter="#//iterator/_Distance" name="difference_type"/>
    <typedefs eTypeParameter="#//iterator/_Pointer" name="pointer"/>
    <typedefs eTypeParameter="#//iterator/_Reference" name="reference"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__iterator_traits"/>
  <eClassifiers xsi:type="cpp:CppClass" name="iterator_traits">
    <eTypeParameters name="_Iterator"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_List_iterator"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_List_const_iterator"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__get_first_arg"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__replace_first_arg"/>
  <eClassifiers xsi:type="cpp:CppClass" name="pointer_traits">
    <eTypeParameters name="_Ptr"/>
    <eOperations xsi:type="cpp:CppOperation" name="pointer_to" visibility="public"
        static="true">
      <eGenericType eTypeParameter="#//pointer_traits/_Ptr"/>
      <eParameters xsi:type="cpp:CppParameter" name="__e"/>
    </eOperations>
    <typedefs eTypeParameter="#//pointer_traits/_Ptr" name="pointer" visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="reverse_iterator">
    <eTypeParameters name="_Iterator"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="current">
      <eGenericType eTypeParameter="#//reverse_iterator/_Iterator"/>
    </eStructuralFeatures>
    <typedefs eClassifier="#//iterator_traits" name="__traits_type">
      <eTypeArguments eTypeParameter="#//reverse_iterator/_Iterator"/>
    </typedefs>
    <typedefs eTypeParameter="#//reverse_iterator/_Iterator" name="iterator_type"
        visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="back_insert_iterator" eSuperTypes="#//iterator">
    <eTypeParameters name="_Container"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="container">
      <eGenericType eTypeParameter="#//back_insert_iterator/_Container"/>
    </eStructuralFeatures>
    <typedefs eTypeParameter="#//back_insert_iterator/_Container" name="container_type"
        visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="front_insert_iterator" eSuperTypes="#//iterator">
    <eTypeParameters name="_Container"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="container">
      <eGenericType eTypeParameter="#//front_insert_iterator/_Container"/>
    </eStructuralFeatures>
    <typedefs eTypeParameter="#//front_insert_iterator/_Container" name="container_type"
        visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="insert_iterator" eSuperTypes="#//iterator">
    <eTypeParameters name="_Container"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="container">
      <eGenericType eTypeParameter="#//insert_iterator/_Container"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="iter"/>
    <typedefs eTypeParameter="#//insert_iterator/_Container" name="container_type"
        visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="move_iterator">
    <eTypeParameters name="_Iterator"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_current">
      <eGenericType eTypeParameter="#//move_iterator/_Iterator"/>
    </eStructuralFeatures>
    <typedefs eClassifier="#//iterator_traits" name="__traits_type">
      <eTypeArguments eTypeParameter="#//move_iterator/_Iterator"/>
    </typedefs>
    <typedefs eTypeParameter="#//move_iterator/_Iterator" name="iterator_type" visibility="public"/>
    <typedefs eTypeParameter="#//move_iterator/_Iterator" name="pointer" visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__copy_move"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__copy_move_backward"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__equal"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__lc_rai"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__lexicographical_compare"/>
  <eClassifiers xsi:type="cpp:CppClass" name="ctype">
    <eTypeParameters name="_CharT"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="id" eType="#//id" visibility="public"
        static="true"/>
    <typedefs eTypeParameter="#//ctype/_CharT" name="char_type" visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="ctype_byname">
    <eTypeParameters name="_CharT"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="codecvt">
    <eTypeParameters name="_InternT"/>
    <eTypeParameters name="_ExternT"/>
    <eTypeParameters name="_StateT"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_c_locale_codecvt" visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="id" eType="#//id" visibility="public"
        static="true"/>
    <typedefs eTypeParameter="#//codecvt/_InternT" name="intern_type" visibility="public"/>
    <typedefs eTypeParameter="#//codecvt/_ExternT" name="extern_type" visibility="public"/>
    <typedefs eTypeParameter="#//codecvt/_StateT" name="state_type" visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="codecvt_byname">
    <eTypeParameters name="_InternT"/>
    <eTypeParameters name="_ExternT"/>
    <eTypeParameters name="_StateT"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="num_get">
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_InIter"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="id" eType="#//id" visibility="public"
        static="true"/>
    <typedefs eTypeParameter="#//num_get/_CharT" name="char_type" visibility="public"/>
    <typedefs eTypeParameter="#//num_get/_InIter" name="iter_type" visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="num_put">
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_OutIter"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="id" eType="#//id" visibility="public"
        static="true"/>
    <typedefs eTypeParameter="#//num_put/_CharT" name="char_type" visibility="public"/>
    <typedefs eTypeParameter="#//num_put/_OutIter" name="iter_type" visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="time_put">
    <eTypeParameters name="_CharT"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="time_put_byname">
    <eTypeParameters name="_CharT"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="bad_alloc" eSuperTypes="#//exception"/>
  <eClassifiers xsi:type="cpp:CppClass" name="bad_array_new_length" eSuperTypes="#//bad_alloc"/>
  <eClassifiers xsi:type="cpp:CppClass" name="nothrow_t"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__alloc_swap">
    <eTypeParameters name="_Alloc"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__alloc_neq">
    <eTypeParameters name="_Alloc"/>
    <eOperations xsi:type="cpp:CppOperation" name="_S_do_it" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        static="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__shrink_to_fit_aux">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="unary_function">
    <eTypeParameters name="_Arg"/>
    <eTypeParameters name="_Result"/>
    <typedefs eTypeParameter="#//unary_function/_Arg" name="argument_type"/>
    <typedefs eTypeParameter="#//unary_function/_Result" name="result_type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="binary_function">
    <eTypeParameters name="_Arg1"/>
    <eTypeParameters name="_Arg2"/>
    <eTypeParameters name="_Result"/>
    <typedefs eTypeParameter="#//binary_function/_Arg1" name="first_argument_type"/>
    <typedefs eTypeParameter="#//binary_function/_Arg2" name="second_argument_type"/>
    <typedefs eTypeParameter="#//binary_function/_Result" name="result_type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="plus">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="minus">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="multiplies">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="divides">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="modulus">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="negate">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="equal_to">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="not_equal_to">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="greater">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="less">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="greater_equal">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="less_equal">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="logical_and">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="logical_or">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="logical_not">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="bit_and">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="bit_or">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="bit_xor">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="bit_not">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="unary_negate">
    <eTypeParameters name="_Predicate"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_pred">
      <eGenericType eTypeParameter="#//unary_negate/_Predicate"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="binary_negate">
    <eTypeParameters name="_Predicate"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_pred">
      <eGenericType eTypeParameter="#//binary_negate/_Predicate"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="pointer_to_unary_function">
    <eTypeParameters name="_Arg"/>
    <eTypeParameters name="_Result"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_ptr"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="pointer_to_binary_function">
    <eTypeParameters name="_Arg1"/>
    <eTypeParameters name="_Arg2"/>
    <eTypeParameters name="_Result"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_ptr"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Identity">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Select1st">
    <eTypeParameters name="_Pair"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Select2nd">
    <eTypeParameters name="_Pair"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="mem_fun_t">
    <eTypeParameters name="_Ret"/>
    <eTypeParameters name="_Tp"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_f" visibility="private"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="const_mem_fun_t">
    <eTypeParameters name="_Ret"/>
    <eTypeParameters name="_Tp"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_f" visibility="private"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="mem_fun_ref_t">
    <eTypeParameters name="_Ret"/>
    <eTypeParameters name="_Tp"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_f" visibility="private"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="const_mem_fun_ref_t">
    <eTypeParameters name="_Ret"/>
    <eTypeParameters name="_Tp"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_f" visibility="private"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="mem_fun1_t">
    <eTypeParameters name="_Ret"/>
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Arg"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_f" visibility="private"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="const_mem_fun1_t">
    <eTypeParameters name="_Ret"/>
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Arg"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_f" visibility="private"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="mem_fun1_ref_t">
    <eTypeParameters name="_Ret"/>
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Arg"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_f" visibility="private"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="const_mem_fun1_ref_t">
    <eTypeParameters name="_Ret"/>
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Arg"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_f" visibility="private"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="binder1st">
    <eTypeParameters name="_Operation"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="op">
      <eGenericType eTypeParameter="#//binder1st/_Operation"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="value"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="binder2nd">
    <eTypeParameters name="_Operation"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="op">
      <eGenericType eTypeParameter="#//binder2nd/_Operation"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="value"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="initializer_list">
    <eTypeParameters name="_E"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_array" visibility="private"
        typedef="#//initializer_list/iterator"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_len" visibility="private"
        typedef="#//initializer_list/size_type"/>
    <typedefs eTypeParameter="#//initializer_list/_E" name="value_type" visibility="public"/>
    <typedefs eTypeParameter="#//initializer_list/_E" name="reference" visibility="public"/>
    <typedefs eTypeParameter="#//initializer_list/_E" name="const_reference" visibility="public"/>
    <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//unsigned%20long%20int"
        name="size_type" visibility="public"/>
    <typedefs eTypeParameter="#//initializer_list/_E" name="iterator" visibility="public"/>
    <typedefs eTypeParameter="#//initializer_list/_E" name="const_iterator" visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__allocator_traits_base"/>
  <eClassifiers xsi:type="cpp:CppClass" name="allocator_traits">
    <eTypeParameters name="_Alloc"/>
    <eOperations xsi:type="cpp:CppOperation" name="allocate" visibility="public" static="true">
      <eParameters xsi:type="cpp:CppParameter" name="__a">
        <eGenericType eTypeParameter="#//allocator_traits/_Alloc"/>
      </eParameters>
      <eParameters xsi:type="cpp:CppParameter" name="__n"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="allocate" visibility="public" static="true">
      <eParameters xsi:type="cpp:CppParameter" name="__a">
        <eGenericType eTypeParameter="#//allocator_traits/_Alloc"/>
      </eParameters>
      <eParameters xsi:type="cpp:CppParameter" name="__n"/>
      <eParameters xsi:type="cpp:CppParameter" name="__hint"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="deallocate" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public" static="true">
      <eParameters xsi:type="cpp:CppParameter" name="__a">
        <eGenericType eTypeParameter="#//allocator_traits/_Alloc"/>
      </eParameters>
      <eParameters xsi:type="cpp:CppParameter" name="__p"/>
      <eParameters xsi:type="cpp:CppParameter" name="__n"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="select_on_container_copy_construction"
        visibility="public" static="true">
      <eGenericType eTypeParameter="#//allocator_traits/_Alloc"/>
      <eParameters xsi:type="cpp:CppParameter" name="__rhs">
        <eGenericType eTypeParameter="#//allocator_traits/_Alloc"/>
      </eParameters>
    </eOperations>
    <typedefs eTypeParameter="#//allocator_traits/_Alloc" name="allocator_type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_copy_insertable_impl">
    <eTypeParameters name="_Alloc"/>
    <typedefs eClassifier="#//allocator_traits" name="_Traits">
      <eTypeArguments eTypeParameter="#//__is_copy_insertable_impl/_Alloc"/>
    </typedefs>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_copy_insertable">
    <eTypeParameters name="_Alloc"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__hash_base">
    <eTypeParameters name="_Result"/>
    <eTypeParameters name="_Arg"/>
    <typedefs eTypeParameter="#//__hash_base/_Result" name="result_type"/>
    <typedefs eTypeParameter="#//__hash_base/_Arg" name="argument_type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="hash">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__hash_enum">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Hash_impl">
    <eOperations xsi:type="cpp:CppOperation" name="hash" static="true" typedef="#//size_t">
      <eParameters xsi:type="cpp:CppParameter" name="__ptr" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"/>
      <eParameters xsi:type="cpp:CppParameter" name="__clength" typedef="#//size_t"/>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Fnv_hash_impl">
    <eOperations xsi:type="cpp:CppOperation" name="hash" static="true" typedef="#//size_t">
      <eParameters xsi:type="cpp:CppParameter" name="__ptr" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"/>
      <eParameters xsi:type="cpp:CppParameter" name="__clength" typedef="#//size_t"/>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_fast_hash" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="locale">
    <eOperations xsi:type="cpp:CppOperation" name="global" eType="#//locale" visibility="public"
        static="true">
      <eParameters xsi:type="cpp:CppParameter" name="__loc" eType="#//locale"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_S_initialize" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private" static="true"/>
    <eOperations xsi:type="cpp:CppOperation" name="_S_initialize_once" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private" static="true"/>
    <eOperations xsi:type="cpp:CppOperation" name="_S_normalize_category" visibility="private"
        static="true" typedef="#//locale/category"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_coalesce" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private">
      <eParameters xsi:type="cpp:CppParameter" name="__base" eType="#//locale"/>
      <eParameters xsi:type="cpp:CppParameter" name="__add" eType="#//locale"/>
      <eParameters xsi:type="cpp:CppParameter" name="__cat" typedef="#//locale/category"/>
    </eOperations>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="none" visibility="public"
        static="true" typedef="#//locale/category"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="ctype" visibility="public"
        static="true" typedef="#//locale/category"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="numeric" visibility="public"
        static="true" typedef="#//locale/category"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="collate" visibility="public"
        static="true" typedef="#//locale/category"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="time" visibility="public"
        static="true" typedef="#//locale/category"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="monetary" visibility="public"
        static="true" typedef="#//locale/category"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="messages" visibility="public"
        static="true" typedef="#//locale/category"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="all" visibility="public"
        static="true" typedef="#//locale/category"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_impl" visibility="private"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_classic" visibility="private"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_global" visibility="private"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_categories" visibility="private"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_once" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        visibility="private" static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_twinned_facets" visibility="private"
        static="true"/>
    <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        name="category" visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="facet">
    <eOperations xsi:type="cpp:CppOperation" name="_S_initialize_once" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private" static="true"/>
    <eOperations xsi:type="cpp:CppOperation" name="_S_create_c_locale" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private" static="true">
      <eParameters xsi:type="cpp:CppParameter" name="__cloc"/>
      <eParameters xsi:type="cpp:CppParameter" name="__s" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_S_clone_c_locale" visibility="private"
        static="true">
      <eParameters xsi:type="cpp:CppParameter" name="__cloc"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_S_destroy_c_locale" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private" static="true">
      <eParameters xsi:type="cpp:CppParameter" name="__cloc"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_S_lc_ctype_c_locale" visibility="private"
        static="true">
      <eParameters xsi:type="cpp:CppParameter" name="__cloc"/>
      <eParameters xsi:type="cpp:CppParameter" name="__s" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_S_get_c_locale" visibility="private"
        static="true"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_add_reference" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_remove_reference" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_refcount" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        visibility="private"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_c_locale" visibility="private"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_c_name" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"
        visibility="private" static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_once" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        visibility="private" static="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="id">
    <eOperations xsi:type="cpp:CppOperation" name="_M_id" visibility="public" typedef="#//size_t"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_index" visibility="private"
        typedef="#//size_t"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_refcount" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        visibility="private" static="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Impl">
    <eOperations xsi:type="cpp:CppOperation" name="_M_add_reference" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_remove_reference" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_check_same_name" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        visibility="private"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_replace_categories" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_replace_category" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_replace_facet" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_install_facet" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_install_cache" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_init_extra" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_init_extra" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_refcount" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        visibility="private"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_facets" eType="#//facet"
        visibility="private"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_facets_size" visibility="private"
        typedef="#//size_t"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_caches" eType="#//facet"
        visibility="private"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_names" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"
        visibility="private"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_id_ctype" visibility="private"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_id_numeric" visibility="private"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_id_collate" visibility="private"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_id_time" visibility="private"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_id_monetary" visibility="private"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_id_messages" visibility="private"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_facet_categories" visibility="private"
        static="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="collate">
    <eTypeParameters name="_CharT"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_compare" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_transform" visibility="public"
        typedef="#//size_t"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_c_locale_collate" visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="id" eType="#//id" visibility="public"
        static="true"/>
    <typedefs eTypeParameter="#//collate/_CharT" name="char_type" visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="collate_byname">
    <eTypeParameters name="_CharT"/>
    <typedefs eTypeParameter="#//collate_byname/_CharT" name="char_type" visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__cow_string">
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="implicit"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="logic_error" eSuperTypes="#//exception">
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_msg" eType="#//__cow_string"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="domain_error" eSuperTypes="#//logic_error"/>
  <eClassifiers xsi:type="cpp:CppClass" name="invalid_argument" eSuperTypes="#//logic_error"/>
  <eClassifiers xsi:type="cpp:CppClass" name="length_error" eSuperTypes="#//logic_error"/>
  <eClassifiers xsi:type="cpp:CppClass" name="out_of_range" eSuperTypes="#//logic_error"/>
  <eClassifiers xsi:type="cpp:CppClass" name="runtime_error" eSuperTypes="#//exception">
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_msg" eType="#//__cow_string"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="range_error" eSuperTypes="#//runtime_error"/>
  <eClassifiers xsi:type="cpp:CppClass" name="overflow_error" eSuperTypes="#//runtime_error"/>
  <eClassifiers xsi:type="cpp:CppClass" name="underflow_error" eSuperTypes="#//runtime_error"/>
  <eClassifiers xsi:type="cpp:CppClass" name="is_error_code_enum" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="is_error_condition_enum" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="error_code">
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_value" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        visibility="private"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_cat" visibility="private"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="error_condition">
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_value" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        visibility="private"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_cat" visibility="private"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="system_error" eSuperTypes="#//runtime_error">
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_code" eType="#//error_code"
        visibility="private"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="_Ios_Fmtflags">
    <eLiterals name="_S_boolalpha"/>
    <eLiterals name="_S_dec"/>
    <eLiterals name="_S_fixed"/>
    <eLiterals name="_S_hex"/>
    <eLiterals name="_S_internal"/>
    <eLiterals name="_S_left"/>
    <eLiterals name="_S_oct"/>
    <eLiterals name="_S_right"/>
    <eLiterals name="_S_scientific"/>
    <eLiterals name="_S_showbase"/>
    <eLiterals name="_S_showpoint"/>
    <eLiterals name="_S_showpos"/>
    <eLiterals name="_S_skipws"/>
    <eLiterals name="_S_unitbuf"/>
    <eLiterals name="_S_uppercase"/>
    <eLiterals name="_S_adjustfield"/>
    <eLiterals name="_S_basefield"/>
    <eLiterals name="_S_floatfield"/>
    <eLiterals name="_S_ios_fmtflags_end"/>
    <eLiterals name="_S_ios_fmtflags_max"/>
    <eLiterals name="_S_ios_fmtflags_min"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="_Ios_Openmode">
    <eLiterals name="_S_app"/>
    <eLiterals name="_S_ate"/>
    <eLiterals name="_S_bin"/>
    <eLiterals name="_S_in"/>
    <eLiterals name="_S_out"/>
    <eLiterals name="_S_trunc"/>
    <eLiterals name="_S_ios_openmode_end"/>
    <eLiterals name="_S_ios_openmode_max"/>
    <eLiterals name="_S_ios_openmode_min"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="_Ios_Iostate">
    <eLiterals name="_S_goodbit"/>
    <eLiterals name="_S_badbit"/>
    <eLiterals name="_S_eofbit"/>
    <eLiterals name="_S_failbit"/>
    <eLiterals name="_S_ios_iostate_end"/>
    <eLiterals name="_S_ios_iostate_max"/>
    <eLiterals name="_S_ios_iostate_min"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="_Ios_Seekdir">
    <eLiterals name="_S_beg"/>
    <eLiterals name="_S_cur"/>
    <eLiterals name="_S_end"/>
    <eLiterals name="_S_ios_seekdir_end"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="ios_base">
    <eOperations xsi:type="cpp:CppOperation" name="register_callback" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__fn"/>
      <eParameters xsi:type="cpp:CppParameter" name="__index" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_call_callbacks" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__ev"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_dispose_callbacks" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_init" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="flags" visibility="public" typedef="#//ios_base/fmtflags">
      <eParameters xsi:type="cpp:CppParameter" name="__fmtfl" typedef="#//ios_base/fmtflags"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="setf" visibility="public" typedef="#//ios_base/fmtflags">
      <eParameters xsi:type="cpp:CppParameter" name="__fmtfl" typedef="#//ios_base/fmtflags"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="setf" visibility="public" typedef="#//ios_base/fmtflags">
      <eParameters xsi:type="cpp:CppParameter" name="__fmtfl" typedef="#//ios_base/fmtflags"/>
      <eParameters xsi:type="cpp:CppParameter" name="__mask" typedef="#//ios_base/fmtflags"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="unsetf" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__mask" typedef="#//ios_base/fmtflags"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="precision" visibility="public"
        typedef="#//streamsize">
      <eParameters xsi:type="cpp:CppParameter" name="__prec" typedef="#//streamsize"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="width" visibility="public" typedef="#//streamsize">
      <eParameters xsi:type="cpp:CppParameter" name="__wide" typedef="#//streamsize"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="sync_with_stdio" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        visibility="public" static="true"/>
    <eOperations xsi:type="cpp:CppOperation" name="imbue" eType="#//locale" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__loc" eType="#//locale"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="xalloc" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        visibility="public" static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="boolalpha" visibility="public"
        static="true" typedef="#//ios_base/fmtflags"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="dec" visibility="public"
        static="true" typedef="#//ios_base/fmtflags"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="fixed" visibility="public"
        static="true" typedef="#//ios_base/fmtflags"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="hex" visibility="public"
        static="true" typedef="#//ios_base/fmtflags"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="internal" visibility="public"
        static="true" typedef="#//ios_base/fmtflags"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="left" visibility="public"
        static="true" typedef="#//ios_base/fmtflags"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="oct" visibility="public"
        static="true" typedef="#//ios_base/fmtflags"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="right" visibility="public"
        static="true" typedef="#//ios_base/fmtflags"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="scientific" visibility="public"
        static="true" typedef="#//ios_base/fmtflags"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="showbase" visibility="public"
        static="true" typedef="#//ios_base/fmtflags"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="showpoint" visibility="public"
        static="true" typedef="#//ios_base/fmtflags"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="showpos" visibility="public"
        static="true" typedef="#//ios_base/fmtflags"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="skipws" visibility="public"
        static="true" typedef="#//ios_base/fmtflags"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="unitbuf" visibility="public"
        static="true" typedef="#//ios_base/fmtflags"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="uppercase" visibility="public"
        static="true" typedef="#//ios_base/fmtflags"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="adjustfield" visibility="public"
        static="true" typedef="#//ios_base/fmtflags"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="basefield" visibility="public"
        static="true" typedef="#//ios_base/fmtflags"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="floatfield" visibility="public"
        static="true" typedef="#//ios_base/fmtflags"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="badbit" visibility="public"
        static="true" typedef="#//ios_base/iostate"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="eofbit" visibility="public"
        static="true" typedef="#//ios_base/iostate"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="failbit" visibility="public"
        static="true" typedef="#//ios_base/iostate"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="goodbit" visibility="public"
        static="true" typedef="#//ios_base/iostate"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="app" visibility="public"
        static="true" typedef="#//ios_base/openmode"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="ate" visibility="public"
        static="true" typedef="#//ios_base/openmode"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="binary" visibility="public"
        static="true" typedef="#//ios_base/openmode"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="in" visibility="public"
        static="true" typedef="#//ios_base/openmode"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="out" visibility="public"
        static="true" typedef="#//ios_base/openmode"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="trunc" visibility="public"
        static="true" typedef="#//ios_base/openmode"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="beg" visibility="public"
        static="true" typedef="#//ios_base/seekdir"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="cur" visibility="public"
        static="true" typedef="#//ios_base/seekdir"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="end" visibility="public"
        static="true" typedef="#//ios_base/seekdir"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_precision" visibility="public"
        typedef="#//streamsize"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_width" visibility="public"
        typedef="#//streamsize"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_flags" visibility="public"
        typedef="#//ios_base/fmtflags"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_exception" visibility="public"
        typedef="#//ios_base/iostate"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_streambuf_state" visibility="public"
        typedef="#//ios_base/iostate"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_callbacks" eType="#//ios_base/_Callback_list"
        visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_word_zero" eType="#//ios_base/_Words"
        visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_local_word" eType="#//ios_base/_Words"
        visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_word_size" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_word" eType="#//ios_base/_Words"
        visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_ios_locale" eType="#//locale"
        visibility="public"/>
    <typedefs eClassifier="#//_Ios_Fmtflags" name="fmtflags" visibility="public"/>
    <typedefs eClassifier="#//_Ios_Iostate" name="iostate" visibility="public"/>
    <typedefs eClassifier="#//_Ios_Openmode" name="openmode" visibility="public"/>
    <typedefs eClassifier="#//_Ios_Seekdir" name="seekdir" visibility="public"/>
    <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        name="io_state" visibility="public"/>
    <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        name="open_mode" visibility="public"/>
    <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        name="seek_dir" visibility="public"/>
    <typedefs eClassifier="#//fpos" name="streampos" visibility="public"/>
    <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20int"
        name="streamoff" visibility="public"/>
    <nestedClasses name="failure" eSuperTypes="#//system_error" visibility="public"/>
    <nestedClasses name="_Callback_list" visibility="public">
      <eOperations xsi:type="cpp:CppOperation" name="_M_add_reference" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"/>
      <eOperations xsi:type="cpp:CppOperation" name="_M_remove_reference" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"/>
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_next" eType="#//ios_base/_Callback_list"/>
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_fn"/>
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_index" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"/>
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_refcount" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"/>
    </nestedClasses>
    <nestedClasses name="_Words" visibility="public">
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_pword" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"/>
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_iword" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20int"/>
    </nestedClasses>
    <nestedClasses name="Init" visibility="public">
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_refcount" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
          visibility="private" static="true"/>
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_synced_with_stdio"
          eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool" visibility="private"
          static="true"/>
    </nestedClasses>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="ctype_base">
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="upper" static="true" typedef="#//ctype_base/mask"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="lower" static="true" typedef="#//ctype_base/mask"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="alpha" static="true" typedef="#//ctype_base/mask"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="digit" static="true" typedef="#//ctype_base/mask"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="xdigit" static="true" typedef="#//ctype_base/mask"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="space" static="true" typedef="#//ctype_base/mask"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="print" static="true" typedef="#//ctype_base/mask"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="graph" static="true" typedef="#//ctype_base/mask"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="cntrl" static="true" typedef="#//ctype_base/mask"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="punct" static="true" typedef="#//ctype_base/mask"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="alnum" static="true" typedef="#//ctype_base/mask"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="blank" static="true" typedef="#//ctype_base/mask"/>
    <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        name="__to_type"/>
    <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//unsigned%20short%20int"
        name="mask"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__pad">
    <eTypeParameters name="_CharT"/>
    <eOperations xsi:type="cpp:CppOperation" name="_S_pad" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        static="true">
      <eParameters xsi:type="cpp:CppParameter" name="__io" eType="#//ios_base"/>
      <eParameters xsi:type="cpp:CppParameter" name="__fill">
        <eGenericType eTypeParameter="#//__pad/_CharT"/>
      </eParameters>
      <eParameters xsi:type="cpp:CppParameter" name="__news">
        <eGenericType eTypeParameter="#//__pad/_CharT"/>
      </eParameters>
      <eParameters xsi:type="cpp:CppParameter" name="__olds">
        <eGenericType eTypeParameter="#//__pad/_CharT"/>
      </eParameters>
      <eParameters xsi:type="cpp:CppParameter" name="__newlen" typedef="#//streamsize"/>
      <eParameters xsi:type="cpp:CppParameter" name="__oldlen" typedef="#//streamsize"/>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__ctype_abstract_base" eSuperTypes="#//ctype_base">
    <eTypeParameters name="_CharT"/>
    <typedefs eTypeParameter="#//__ctype_abstract_base/_CharT" name="char_type" visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__num_base">
    <eOperations xsi:type="cpp:CppOperation" name="_S_format_float" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public" static="true">
      <eParameters xsi:type="cpp:CppParameter" name="__io" eType="#//ios_base"/>
      <eParameters xsi:type="cpp:CppParameter" name="__fptr" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
      <eParameters xsi:type="cpp:CppParameter" name="__mod" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
    </eOperations>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_atoms_out" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"
        visibility="public" static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_atoms_in" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"
        visibility="public" static="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__numpunct_cache">
    <eTypeParameters name="_CharT"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_cache" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void">
      <eParameters xsi:type="cpp:CppParameter" name="__loc" eType="#//locale"/>
    </eOperations>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_grouping" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_grouping_size" typedef="#//size_t"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_use_grouping" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_truename">
      <eGenericType eTypeParameter="#//__numpunct_cache/_CharT"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_truename_size" typedef="#//size_t"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_falsename">
      <eGenericType eTypeParameter="#//__numpunct_cache/_CharT"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_falsename_size" typedef="#//size_t"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_decimal_point">
      <eGenericType eTypeParameter="#//__numpunct_cache/_CharT"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_thousands_sep">
      <eGenericType eTypeParameter="#//__numpunct_cache/_CharT"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_atoms_out">
      <eGenericType eTypeParameter="#//__numpunct_cache/_CharT"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_atoms_in">
      <eGenericType eTypeParameter="#//__numpunct_cache/_CharT"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_allocated" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__use_cache">
    <eTypeParameters name="_Facet"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="sentry">
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_ok" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_os" eType="#//basic_ostream"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_ok" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"/>
    <typedefs eClassifier="#//basic_streambuf" name="__streambuf_type" visibility="public"/>
    <typedefs eClassifier="#//basic_istream" name="__istream_type" visibility="public"/>
    <typedefs eClassifier="#//ctype" name="__ctype_type" visibility="public">
      <eTypeArguments eTypeParameter="#//basic_istream/_CharT"/>
    </typedefs>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="codecvt_base"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__codecvt_abstract_base" eSuperTypes="#//codecvt_base">
    <eTypeParameters name="_InternT"/>
    <eTypeParameters name="_ExternT"/>
    <eTypeParameters name="_StateT"/>
    <eOperations xsi:type="cpp:CppOperation" name="encoding" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="always_noconv" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="max_length" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        visibility="public"/>
    <typedefs eTypeParameter="#//__codecvt_abstract_base/_InternT" name="intern_type"
        visibility="public"/>
    <typedefs eTypeParameter="#//__codecvt_abstract_base/_ExternT" name="extern_type"
        visibility="public"/>
    <typedefs eTypeParameter="#//__codecvt_abstract_base/_StateT" name="state_type"
        visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__basic_file"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Destroy_aux"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__uninitialized_copy"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__uninitialized_fill"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__uninitialized_fill_n"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__uninitialized_default_1"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__uninitialized_default_n_1"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Temporary_buffer">
    <eTypeParameters name="_ForwardIterator"/>
    <eTypeParameters name="_Tp"/>
    <eOperations xsi:type="cpp:CppOperation" name="begin" visibility="public" typedef="#//_Temporary_buffer/iterator"/>
    <eOperations xsi:type="cpp:CppOperation" name="end" visibility="public" typedef="#//_Temporary_buffer/iterator"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_original_len" visibility="public"
        typedef="#//_Temporary_buffer/size_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_len" visibility="public"
        typedef="#//_Temporary_buffer/size_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_buffer" visibility="public"
        typedef="#//_Temporary_buffer/pointer"/>
    <typedefs eTypeParameter="#//_Temporary_buffer/_Tp" name="value_type" visibility="public"/>
    <typedefs eTypeParameter="#//_Temporary_buffer/_Tp" name="pointer" visibility="public"/>
    <typedefs eTypeParameter="#//_Temporary_buffer/_Tp" name="iterator" visibility="public"/>
    <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20int"
        name="size_type" visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__uninitialized_construct_buf_dispatch"/>
  <eClassifiers xsi:type="cpp:CppClass" name="raw_storage_iterator" eSuperTypes="#//iterator">
    <eTypeParameters name="_OutputIterator"/>
    <eTypeParameters name="_Tp"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_iter">
      <eGenericType eTypeParameter="#//raw_storage_iterator/_OutputIterator"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="type_info">
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="__name" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"
        visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="bad_cast" eSuperTypes="#//exception"/>
  <eClassifiers xsi:type="cpp:CppClass" name="bad_typeid" eSuperTypes="#//exception"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__erased_type"/>
  <eClassifiers xsi:type="cpp:CppClass" name="allocator_arg_t"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__uses_allocator_helper" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__uses_alloc_base"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__uses_alloc0">
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_a" eType="#//__uses_alloc0/_Sink"/>
    <nestedClasses name="_Sink"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__uses_alloc1">
    <eTypeParameters name="_Alloc"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_a">
      <eGenericType eTypeParameter="#//__uses_alloc1/_Alloc"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__uses_alloc2">
    <eTypeParameters name="_Alloc"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_a">
      <eGenericType eTypeParameter="#//__uses_alloc2/_Alloc"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__uses_alloc"/>
  <eClassifiers xsi:type="cpp:CppClass" name="tuple_size"/>
  <eClassifiers xsi:type="cpp:CppClass" name="tuple_element"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_tuple_like_impl" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__pair_get"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Itup_cat"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Build_index_tuple"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__array_traits">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="array">
    <eTypeParameters name="_Tp"/>
    <eOperations xsi:type="cpp:CppOperation" name="fill" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void">
      <eParameters xsi:type="cpp:CppParameter" name="__u" typedef="#//array/value_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="swap" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void">
      <eParameters xsi:type="cpp:CppParameter" name="__other">
        <eGenericType eClassifier="#//array">
          <eTypeArguments eTypeParameter="#//array/_Tp"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="at" typedef="#//array/reference">
      <eParameters xsi:type="cpp:CppParameter" name="__n" typedef="#//array/size_type"/>
    </eOperations>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_elems"/>
    <typedefs eTypeParameter="#//array/_Tp" name="value_type"/>
    <typedefs eTypeParameter="#//array/_Tp" name="pointer"/>
    <typedefs eTypeParameter="#//array/_Tp" name="const_pointer"/>
    <typedefs eTypeParameter="#//array/_Tp" name="reference"/>
    <typedefs eTypeParameter="#//array/_Tp" name="const_reference"/>
    <typedefs eTypeParameter="#//array/_Tp" name="iterator"/>
    <typedefs eTypeParameter="#//array/_Tp" name="const_iterator"/>
    <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//unsigned%20long%20int"
        name="size_type"/>
    <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20int"
        name="difference_type"/>
    <typedefs eClassifier="#//reverse_iterator" name="reverse_iterator">
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//array/iterator"/>
    </typedefs>
    <typedefs eClassifier="#//reverse_iterator" name="const_reverse_iterator">
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//array/const_iterator"/>
    </typedefs>
    <typedefs eClassifier="#//__array_traits" name="_AT_Type">
      <eTypeArguments eTypeParameter="#//array/_Tp"/>
    </typedefs>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Head_base"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Tuple_impl"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_empty_non_tuple">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_TC"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__tuple_compare">
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Up"/>
    <eOperations xsi:type="cpp:CppOperation" name="__eq" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        static="true">
      <eParameters xsi:type="cpp:CppParameter" name="__t">
        <eGenericType eTypeParameter="#//__tuple_compare/_Tp"/>
      </eParameters>
      <eParameters xsi:type="cpp:CppParameter" name="__u">
        <eGenericType eTypeParameter="#//__tuple_compare/_Up"/>
      </eParameters>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="__less" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        static="true">
      <eParameters xsi:type="cpp:CppParameter" name="__t">
        <eGenericType eTypeParameter="#//__tuple_compare/_Tp"/>
      </eParameters>
      <eParameters xsi:type="cpp:CppParameter" name="__u">
        <eGenericType eTypeParameter="#//__tuple_compare/_Up"/>
      </eParameters>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_tuple_like">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__make_tuple_impl"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__do_make_tuple">
    <eTypeParameters name="_Tuple"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__make_tuple">
    <eTypeParameters name="_Tuple"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__combine_tuples"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__tuple_cat_result"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__make_1st_indices"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__tuple_concater"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Swallow_assign"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Mem_fn"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Maybe_get_result_type"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Weak_result_type_impl">
    <eTypeParameters name="_Functor"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Weak_result_type">
    <eTypeParameters name="_Functor"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__inv_unwrap">
    <eTypeParameters name="_Tp"/>
    <typedefs eTypeParameter="#//__inv_unwrap/_Tp" name="type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Reference_wrapper_base_impl"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__has_argument_type" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__has_first_argument_type" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__has_second_argument_type" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Reference_wrapper_base">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Pack"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_AllConvertible" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Maybe_unary_or_binary_function"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Mem_fn_traits"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Mem_fn_traits_base">
    <eTypeParameters name="_Res"/>
    <eTypeParameters name="_Class"/>
    <typedefs eTypeParameter="#//_Mem_fn_traits_base/_Res" name="__result_type"/>
    <typedefs eClassifier="#//_Maybe_unary_or_binary_function" name="__maybe_type">
      <eTypeArguments eTypeParameter="#//_Mem_fn_traits_base/_Res"/>
      <eTypeArguments eTypeParameter="#//_Mem_fn_traits_base/_Class"/>
    </typedefs>
    <typedefs eClassifier="#//integral_constant" name="__arity">
      <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//size_t"/>
    </typedefs>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Mem_fn_base">
    <eTypeParameters name="_MemFunPtr"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_pmf">
      <eGenericType eTypeParameter="#//_Mem_fn_base/_MemFunPtr"/>
    </eStructuralFeatures>
    <typedefs eClassifier="#//_Mem_fn_traits" name="_Traits">
      <eTypeArguments eTypeParameter="#//_Mem_fn_base/_MemFunPtr"/>
    </typedefs>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="is_bind_expression" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="is_placeholder" eSuperTypes="#//integral_constant"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Placeholder"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Mu">
    <eTypeParameters name="_Arg"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Maybe_wrap_member_pointer">
    <eTypeParameters name="_Tp"/>
    <typedefs eTypeParameter="#//_Maybe_wrap_member_pointer/_Tp" name="type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Bind"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Bind_result"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Bind_check_arity"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Bind_helper">
    <eTypeParameters name="_Func"/>
    <typedefs eClassifier="#//_Maybe_wrap_member_pointer" name="__maybe_type"/>
    <typedefs eTypeParameter="#//_Maybe_wrap_member_pointer/_Tp" name="__func_type"/>
    <typedefs eClassifier="#//_Bind" name="type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Bindres_helper">
    <eTypeParameters name="_Result"/>
    <eTypeParameters name="_Func"/>
    <typedefs eClassifier="#//_Maybe_wrap_member_pointer" name="__maybe_type"/>
    <typedefs eTypeParameter="#//_Maybe_wrap_member_pointer/_Tp" name="__functor_type"/>
    <typedefs eClassifier="#//_Bind_result" name="type">
      <eTypeArguments eTypeParameter="#//_Bindres_helper/_Result"/>
    </typedefs>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Bind_simple"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Bind_simple_helper">
    <eTypeParameters name="_Func"/>
    <typedefs eClassifier="#//_Maybe_wrap_member_pointer" name="__maybe_type"/>
    <typedefs eTypeParameter="#//_Maybe_wrap_member_pointer/_Tp" name="__func_type"/>
    <typedefs eClassifier="#//_Bind_simple" name="__type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="bad_function_call" eSuperTypes="#//exception"/>
  <eClassifiers xsi:type="cpp:CppClass" name="__is_location_invariant">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="_Manager_operation">
    <eLiterals name="__get_type_info"/>
    <eLiterals name="__get_functor_ptr"/>
    <eLiterals name="__clone_functor"/>
    <eLiterals name="__destroy_functor"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Simple_type_wrapper">
    <eTypeParameters name="_Tp"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="__value">
      <eGenericType eTypeParameter="#//_Simple_type_wrapper/_Tp"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="function"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Function_base">
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_max_size" visibility="public"
        static="true" typedef="#//size_t"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_max_align" visibility="public"
        static="true" typedef="#//size_t"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_functor" visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_manager" visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Function_handler"/>
  <eClassifiers xsi:type="cpp:CppClass" name="auto_ptr">
    <eTypeParameters name="_Tp"/>
    <eOperations xsi:type="cpp:CppOperation" name="reset" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_ptr" visibility="private">
      <eGenericType eTypeParameter="#//auto_ptr/_Tp"/>
    </eStructuralFeatures>
    <typedefs eTypeParameter="#//auto_ptr/_Tp" name="element_type" visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="default_delete">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="unique_ptr">
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Dp"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_t" typedef="#//unique_ptr/__tuple_type"/>
    <typedefs eClassifier="#//tuple" name="__tuple_type">
      <eTypeArguments eTypeParameter="#//unique_ptr/_Dp"/>
    </typedefs>
    <typedefs eTypeParameter="#//unique_ptr/_Tp" name="element_type" visibility="public"/>
    <typedefs eTypeParameter="#//unique_ptr/_Dp" name="deleter_type" visibility="public"/>
    <nestedClasses name="_Pointer"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__allocated_ptr">
    <eTypeParameters name="_Alloc"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_alloc" visibility="private">
      <eGenericType eTypeParameter="#//__allocated_ptr/_Alloc"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_ptr" visibility="private"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="bad_weak_ptr" eSuperTypes="#//exception"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Mutex_base"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Sp_counted_base">
    <eOperations xsi:type="cpp:CppOperation" name="_M_add_ref_copy" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_add_ref_lock" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_add_ref_lock_nothrow" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        visibility="public"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_use_count" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        visibility="private"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_weak_count" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        visibility="private"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__shared_ptr">
    <eTypeParameters name="_Tp"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_ptr" visibility="private">
      <eGenericType eTypeParameter="#//__shared_ptr/_Tp"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_refcount" eType="#//__shared_count"
        visibility="private"/>
    <typedefs eTypeParameter="#//__shared_ptr/_Tp" name="element_type" visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__weak_ptr">
    <eTypeParameters name="_Tp"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_ptr" visibility="private">
      <eGenericType eTypeParameter="#//__weak_ptr/_Tp"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_refcount" eType="#//__weak_count"
        visibility="private"/>
    <typedefs eTypeParameter="#//__weak_ptr/_Tp" name="element_type" visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__enable_shared_from_this">
    <eTypeParameters name="_Tp"/>
    <eOperations xsi:type="cpp:CppOperation" name="shared_from_this" visibility="public">
      <eGenericType eClassifier="#//__shared_ptr">
        <eTypeArguments eTypeParameter="#//__enable_shared_from_this/_Tp"/>
      </eGenericType>
    </eOperations>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_weak_this" visibility="private">
      <eGenericType eClassifier="#//__weak_ptr">
        <eTypeArguments eTypeParameter="#//__enable_shared_from_this/_Tp"/>
      </eGenericType>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="shared_ptr">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="weak_ptr">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="owner_less"/>
  <eClassifiers xsi:type="cpp:CppClass" name="enable_shared_from_this">
    <eTypeParameters name="_Tp"/>
    <eOperations xsi:type="cpp:CppOperation" name="shared_from_this" visibility="public">
      <eGenericType eClassifier="#//shared_ptr">
        <eTypeArguments eTypeParameter="#//enable_shared_from_this/_Tp"/>
      </eGenericType>
    </eOperations>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_weak_this" visibility="private">
      <eGenericType eClassifier="#//weak_ptr">
        <eTypeArguments eTypeParameter="#//enable_shared_from_this/_Tp"/>
      </eGenericType>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__weak_count">
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_pi" eType="#//_Sp_counted_base"
        visibility="private"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__shared_count">
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_pi" eType="#//_Sp_counted_base"
        visibility="private"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Sp_counted_ptr">
    <eTypeParameters name="_Ptr"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_ptr" visibility="private">
      <eGenericType eTypeParameter="#//_Sp_counted_ptr/_Ptr"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Sp_ebo_helper">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Sp_counted_deleter">
    <eTypeParameters name="_Ptr"/>
    <eTypeParameters name="_Deleter"/>
    <eTypeParameters name="_Alloc"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_impl" eType="#//_Sp_counted_deleter/_Impl"
        visibility="private"/>
    <nestedClasses name="_Impl">
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_ptr" visibility="public">
        <eGenericType eTypeParameter="#//_Sp_counted_deleter/_Ptr"/>
      </eStructuralFeatures>
      <typedefs eClassifier="#//_Sp_ebo_helper" name="_Del_base">
        <eTypeArguments eTypeParameter="#//_Sp_counted_deleter/_Deleter"/>
      </typedefs>
      <typedefs eClassifier="#//_Sp_ebo_helper" name="_Alloc_base">
        <eTypeArguments eTypeParameter="#//_Sp_counted_deleter/_Alloc"/>
      </typedefs>
    </nestedClasses>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Sp_make_shared_tag"/>
  <eClassifiers xsi:type="cpp:CppClass" name="_Sp_counted_ptr_inplace">
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Alloc"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_impl" eType="#//_Sp_counted_ptr_inplace/_Impl"
        visibility="private"/>
    <nestedClasses name="_Impl">
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_storage" visibility="public"/>
      <typedefs eClassifier="#//_Sp_ebo_helper" name="_A_base">
        <eTypeArguments eTypeParameter="#//_Sp_counted_ptr_inplace/_Alloc"/>
      </typedefs>
    </nestedClasses>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Sp_less">
    <eTypeParameters name="_Sp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Sp_owner_less">
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Tp1"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="memory_order">
    <eLiterals name="memory_order_relaxed"/>
    <eLiterals name="memory_order_consume"/>
    <eLiterals name="memory_order_acquire"/>
    <eLiterals name="memory_order_release"/>
    <eLiterals name="memory_order_acq_rel"/>
    <eLiterals name="memory_order_seq_cst"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="__memory_order_modifier">
    <eLiterals name="__memory_order_mask"/>
    <eLiterals name="__memory_order_modifier_mask"/>
    <eLiterals name="__memory_order_hle_acquire"/>
    <eLiterals name="__memory_order_hle_release"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__atomic_base">
    <eTypeParameters name="_ITp"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_S_alignment" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        visibility="private" static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_i" visibility="private"
        typedef="#//__atomic_base/__int_type"/>
    <typedefs eTypeParameter="#//__atomic_base/_ITp" name="__int_type" visibility="private"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="atomic"/>
  <eClassifiers xsi:type="cpp:CppClass" name="atomic_flag">
    <eOperations xsi:type="cpp:CppOperation" name="_S_init" visibility="private" static="true"
        typedef="#//__atomic_flag_data_type">
      <eParameters xsi:type="cpp:CppParameter" name="__i" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"/>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Sp_locker">
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_key1" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//unsigned%20char"
        visibility="private"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_key2" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//unsigned%20char"
        visibility="private"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="auto_ptr_ref">
    <eTypeParameters name="_Tp1"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_ptr">
      <eGenericType eTypeParameter="#//auto_ptr_ref/_Tp1"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Vector_base">
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Alloc"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_allocate" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n" typedef="#//size_t"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_deallocate" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__p"/>
      <eParameters xsi:type="cpp:CppParameter" name="__n" typedef="#//size_t"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_create_storage" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private">
      <eParameters xsi:type="cpp:CppParameter" name="__n" typedef="#//size_t"/>
    </eOperations>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_impl" eType="#//_Vector_base/_Vector_impl"
        visibility="public"/>
    <typedefs eTypeParameter="#//_Vector_base/_Alloc" name="allocator_type" visibility="public"/>
    <nestedClasses name="_Vector_impl">
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_start"/>
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_finish"/>
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_end_of_storage"/>
    </nestedClasses>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="vector">
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_Alloc"/>
    <eOperations xsi:type="cpp:CppOperation" name="assign" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n" typedef="#//vector/size_type"/>
      <eParameters xsi:type="cpp:CppParameter" name="__val" typedef="#//vector/value_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="assign" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__l">
        <eGenericType eClassifier="#//initializer_list">
          <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//vector/value_type"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="resize" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__new_size" typedef="#//vector/size_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="resize" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__new_size" typedef="#//vector/size_type"/>
      <eParameters xsi:type="cpp:CppParameter" name="__x" typedef="#//vector/value_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="shrink_to_fit" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="reserve" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n" typedef="#//vector/size_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="at" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n" typedef="#//vector/size_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="push_back" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__x" typedef="#//vector/value_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="push_back" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__x" typedef="#//vector/value_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="insert" eType="#//iterator" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__position"/>
      <eParameters xsi:type="cpp:CppParameter" name="__x" typedef="#//vector/value_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="insert" eType="#//iterator" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__position"/>
      <eParameters xsi:type="cpp:CppParameter" name="__x" typedef="#//vector/value_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="insert" eType="#//iterator" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__position"/>
      <eParameters xsi:type="cpp:CppParameter" name="__l">
        <eGenericType eClassifier="#//initializer_list">
          <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//vector/value_type"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="insert" eType="#//iterator" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__position"/>
      <eParameters xsi:type="cpp:CppParameter" name="__n" typedef="#//vector/size_type"/>
      <eParameters xsi:type="cpp:CppParameter" name="__x" typedef="#//vector/value_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="erase" eType="#//iterator" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__position"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="erase" eType="#//iterator" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__first"/>
      <eParameters xsi:type="cpp:CppParameter" name="__last"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_fill_initialize" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n" typedef="#//vector/size_type"/>
      <eParameters xsi:type="cpp:CppParameter" name="__value" typedef="#//vector/value_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_default_initialize" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n" typedef="#//vector/size_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_fill_assign" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n" typedef="#//vector/size_type"/>
      <eParameters xsi:type="cpp:CppParameter" name="__val" typedef="#//vector/value_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_fill_insert" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__pos" eType="#//iterator"/>
      <eParameters xsi:type="cpp:CppParameter" name="__n" typedef="#//vector/size_type"/>
      <eParameters xsi:type="cpp:CppParameter" name="__x" typedef="#//vector/value_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_default_append" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n" typedef="#//vector/size_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_shrink_to_fit" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_erase" eType="#//iterator" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__position" eType="#//iterator"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_erase" eType="#//iterator" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__first" eType="#//iterator"/>
      <eParameters xsi:type="cpp:CppParameter" name="__last" eType="#//iterator"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_move_assign" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private">
      <eParameters xsi:type="cpp:CppParameter" name="__x">
        <eGenericType eClassifier="#//vector">
          <eTypeArguments eTypeParameter="#//vector/_Tp"/>
          <eTypeArguments eTypeParameter="#//vector/_Alloc"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <typedefs eClassifier="#//_Vector_base" name="_Base">
      <eTypeArguments eTypeParameter="#//vector/_Tp"/>
      <eTypeArguments eTypeParameter="#//vector/_Alloc"/>
    </typedefs>
    <typedefs eTypeParameter="#//vector/_Tp" name="value_type" visibility="public"/>
    <typedefs eClassifier="#//reverse_iterator" name="const_reverse_iterator" visibility="public"/>
    <typedefs eClassifier="#//reverse_iterator" name="reverse_iterator" visibility="public">
      <eTypeArguments eClassifier="#//iterator"/>
    </typedefs>
    <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//unsigned%20long%20int"
        name="size_type" visibility="public"/>
    <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20int"
        name="difference_type" visibility="public"/>
    <typedefs eTypeParameter="#//vector/_Alloc" name="allocator_type" visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Bit_reference">
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_p" typedef="#//_Bit_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_mask" typedef="#//_Bit_type"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Bit_iterator_base" eSuperTypes="#//iterator">
    <eOperations xsi:type="cpp:CppOperation" name="_M_bump_up" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_bump_down" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_incr" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void">
      <eParameters xsi:type="cpp:CppParameter" name="__i" typedef="#//ptrdiff_t"/>
    </eOperations>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_p" typedef="#//_Bit_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_offset" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//unsigned%20int"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Bit_iterator">
    <typedefs eClassifier="#//_Bit_reference" name="reference"/>
    <typedefs eClassifier="#//_Bit_reference" name="pointer"/>
    <typedefs eClassifier="#//_Bit_iterator" name="iterator"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Bit_const_iterator">
    <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        name="reference"/>
    <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        name="const_reference"/>
    <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        name="pointer"/>
    <typedefs eClassifier="#//_Bit_const_iterator" name="const_iterator"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Bvector_base">
    <eTypeParameters name="_Alloc"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_allocate" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n" typedef="#//size_t"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_deallocate" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="_S_nword" visibility="public" static="true"
        typedef="#//size_t">
      <eParameters xsi:type="cpp:CppParameter" name="__n" typedef="#//size_t"/>
    </eOperations>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_impl" eType="#//_Bvector_base/_Bvector_impl"
        visibility="public"/>
    <typedefs eTypeParameter="#//_Bvector_base/_Alloc" name="allocator_type" visibility="public"/>
    <nestedClasses name="_Bvector_impl">
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_start" eType="#//_Bit_iterator"/>
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_finish" eType="#//_Bit_iterator"/>
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_end_of_storage"/>
    </nestedClasses>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="float_round_style">
    <eLiterals name="round_indeterminate"/>
    <eLiterals name="round_toward_zero"/>
    <eLiterals name="round_to_nearest"/>
    <eLiterals name="round_toward_infinity"/>
    <eLiterals name="round_toward_neg_infinity"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="float_denorm_style">
    <eLiterals name="denorm_indeterminate"/>
    <eLiterals name="denorm_absent"/>
    <eLiterals name="denorm_present"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="__numeric_limits_base">
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="is_specialized" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="digits" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="digits10" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="max_digits10" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="is_signed" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="is_integer" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="is_exact" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="radix" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="min_exponent" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="min_exponent10" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="max_exponent" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="max_exponent10" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="has_infinity" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="has_quiet_NaN" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="has_signaling_NaN" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="has_denorm" eType="#//float_denorm_style"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="has_denorm_loss" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="is_iec559" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="is_bounded" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="is_modulo" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="traps" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="tinyness_before" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        static="true"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="round_style" eType="#//float_round_style"
        static="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="numeric_limits">
    <eTypeParameters name="_Tp"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="istream_iterator">
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_Traits"/>
    <eTypeParameters name="_Dist"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_read" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_stream" visibility="private"
        typedef="#//istream_iterator/istream_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_value" visibility="private">
      <eGenericType eTypeParameter="#//istream_iterator/_Tp"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_ok" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
        visibility="private"/>
    <typedefs eTypeParameter="#//istream_iterator/_CharT" name="char_type" visibility="public"/>
    <typedefs eTypeParameter="#//istream_iterator/_Traits" name="traits_type" visibility="public"/>
    <typedefs eClassifier="#//basic_istream" name="istream_type" visibility="public">
      <eTypeArguments eTypeParameter="#//istream_iterator/_CharT"/>
      <eTypeArguments eTypeParameter="#//istream_iterator/_Traits"/>
    </typedefs>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="ostream_iterator" eSuperTypes="#//iterator">
    <eTypeParameters name="_Tp"/>
    <eTypeParameters name="_CharT"/>
    <eTypeParameters name="_Traits"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_stream" visibility="private"
        typedef="#//ostream_iterator/ostream_type"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_string" visibility="private">
      <eGenericType eTypeParameter="#//ostream_iterator/_CharT"/>
    </eStructuralFeatures>
    <typedefs eTypeParameter="#//ostream_iterator/_CharT" name="char_type" visibility="public"/>
    <typedefs eTypeParameter="#//ostream_iterator/_Traits" name="traits_type" visibility="public"/>
    <typedefs eClassifier="#//basic_ostream" name="ostream_type" visibility="public">
      <eTypeArguments eTypeParameter="#//ostream_iterator/_CharT"/>
      <eTypeArguments eTypeParameter="#//ostream_iterator/_Traits"/>
    </typedefs>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="uniform_int_distribution">
    <eTypeParameters name="_IntType"/>
    <eOperations xsi:type="cpp:CppOperation" name="reset" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="param" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__param" eType="#//uniform_int_distribution/param_type"/>
    </eOperations>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_param" eType="#//uniform_int_distribution/param_type"
        visibility="private"/>
    <typedefs eTypeParameter="#//uniform_int_distribution/_IntType" name="result_type"
        visibility="public"/>
    <nestedClasses name="param_type" visibility="public">
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_a" visibility="private">
        <eGenericType eTypeParameter="#//uniform_int_distribution/_IntType"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_b" visibility="private">
        <eGenericType eTypeParameter="#//uniform_int_distribution/_IntType"/>
      </eStructuralFeatures>
      <typedefs eClassifier="#//uniform_int_distribution" name="distribution_type">
        <eTypeArguments eTypeParameter="#//uniform_int_distribution/_IntType"/>
      </typedefs>
    </nestedClasses>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="_Hashtable">
    <eTypeParameters name="_Key"/>
    <eTypeParameters name="_Value"/>
    <eTypeParameters name="_Alloc"/>
    <eTypeParameters name="_ExtractKey"/>
    <eTypeParameters name="_Equal"/>
    <eTypeParameters name="_H1"/>
    <eTypeParameters name="_H2"/>
    <eTypeParameters name="_Hash"/>
    <eTypeParameters name="_RehashPolicy"/>
    <eTypeParameters name="_Traits"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_deallocate_buckets" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private">
      <eParameters xsi:type="cpp:CppParameter" name="__bkts"/>
      <eParameters xsi:type="cpp:CppParameter" name="__n"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_deallocate_buckets" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_move_assign" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_move_assign" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private"/>
    <eOperations xsi:type="cpp:CppOperation" name="swap" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="begin" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="end" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="__rehash_policy" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__pol">
        <eGenericType eTypeParameter="#//_Hashtable/_RehashPolicy"/>
      </eParameters>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="find" eType="#//iterator" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__k" typedef="#//_Hashtable/key_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="equal_range" visibility="public">
      <eGenericType eClassifier="#//pair">
        <eTypeArguments eClassifier="#//iterator"/>
        <eTypeArguments eClassifier="#//iterator"/>
      </eGenericType>
      <eParameters xsi:type="cpp:CppParameter" name="__k" typedef="#//_Hashtable/key_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_insert_bucket_begin" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_remove_bucket_begin" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__bkt"/>
      <eParameters xsi:type="cpp:CppParameter" name="__next_n"/>
      <eParameters xsi:type="cpp:CppParameter" name="__next_bkt"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_insert_unique_node" eType="#//iterator"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__bkt"/>
      <eParameters xsi:type="cpp:CppParameter" name="__code"/>
      <eParameters xsi:type="cpp:CppParameter" name="__n"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_insert_multi_node" eType="#//iterator"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__hint"/>
      <eParameters xsi:type="cpp:CppParameter" name="__code"/>
      <eParameters xsi:type="cpp:CppParameter" name="__n"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_erase" visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_erase" visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="_M_erase" eType="#//iterator" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__bkt"/>
      <eParameters xsi:type="cpp:CppParameter" name="__prev_n"/>
      <eParameters xsi:type="cpp:CppParameter" name="__n"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="erase" eType="#//iterator" visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="erase" eType="#//iterator" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__it" eType="#//iterator"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="erase" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__k" typedef="#//_Hashtable/key_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="erase" eType="#//iterator" visibility="public"/>
    <eOperations xsi:type="cpp:CppOperation" name="rehash" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_rehash_aux" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private">
      <eParameters xsi:type="cpp:CppParameter" name="__n"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_rehash_aux" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private">
      <eParameters xsi:type="cpp:CppParameter" name="__n"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="_M_rehash" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="private">
      <eParameters xsi:type="cpp:CppParameter" name="__n"/>
      <eParameters xsi:type="cpp:CppParameter" name="__state"/>
    </eOperations>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_buckets" visibility="private"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_bucket_count" visibility="private"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_before_begin" visibility="private"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_element_count" visibility="private"/>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_rehash_policy" visibility="private">
      <eGenericType eTypeParameter="#//_Hashtable/_RehashPolicy"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_single_bucket" visibility="private"/>
    <typedefs eTypeParameter="#//_Hashtable/_Traits" name="__traits_type"/>
    <typedefs eTypeParameter="#//_Hashtable/_Key" name="key_type" visibility="public"/>
    <typedefs eTypeParameter="#//_Hashtable/_Value" name="value_type" visibility="public"/>
    <typedefs eTypeParameter="#//_Hashtable/_Alloc" name="allocator_type" visibility="public"/>
    <typedefs eTypeParameter="#//_Hashtable/_Equal" name="key_equal" visibility="public"/>
    <typedefs eTypeParameter="#//_Hashtable/_Value" name="reference" visibility="public"/>
    <typedefs eTypeParameter="#//_Hashtable/_Value" name="const_reference" visibility="public"/>
    <typedefs eTypeParameter="#//_Hashtable/_RehashPolicy" name="__rehash_type" visibility="private"/>
    <nestedClasses name="__hash_code_base_access" visibility="private"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="unordered_set">
    <eTypeParameters name="_Value"/>
    <eTypeParameters name="_Hash"/>
    <eTypeParameters name="_Pred"/>
    <eTypeParameters name="_Alloc"/>
    <eOperations xsi:type="cpp:CppOperation" name="insert" visibility="public">
      <eGenericType eClassifier="#//pair">
        <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//unordered_set/iterator"/>
        <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"/>
      </eGenericType>
      <eParameters xsi:type="cpp:CppParameter" name="__x" typedef="#//unordered_set/value_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="insert" visibility="public">
      <eGenericType eClassifier="#//pair">
        <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//unordered_set/iterator"/>
        <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"/>
      </eGenericType>
      <eParameters xsi:type="cpp:CppParameter" name="__x" typedef="#//unordered_set/value_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="insert" visibility="public" typedef="#//unordered_set/iterator">
      <eParameters xsi:type="cpp:CppParameter" name="__hint"/>
      <eParameters xsi:type="cpp:CppParameter" name="__x" typedef="#//unordered_set/value_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="insert" visibility="public" typedef="#//unordered_set/iterator">
      <eParameters xsi:type="cpp:CppParameter" name="__hint"/>
      <eParameters xsi:type="cpp:CppParameter" name="__x" typedef="#//unordered_set/value_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="insert" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__l">
        <eGenericType eClassifier="#//initializer_list">
          <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//unordered_set/value_type"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="erase" visibility="public" typedef="#//unordered_set/iterator">
      <eParameters xsi:type="cpp:CppParameter" name="__position"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="erase" visibility="public" typedef="#//unordered_set/iterator">
      <eParameters xsi:type="cpp:CppParameter" name="__position" typedef="#//unordered_set/iterator"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="erase" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__x" typedef="#//unordered_set/key_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="erase" visibility="public" typedef="#//unordered_set/iterator">
      <eParameters xsi:type="cpp:CppParameter" name="__first"/>
      <eParameters xsi:type="cpp:CppParameter" name="__last"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="swap" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__x">
        <eGenericType eClassifier="#//unordered_set">
          <eTypeArguments eTypeParameter="#//unordered_set/_Value"/>
          <eTypeArguments eTypeParameter="#//unordered_set/_Hash"/>
          <eTypeArguments eTypeParameter="#//unordered_set/_Pred"/>
          <eTypeArguments eTypeParameter="#//unordered_set/_Alloc"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="find" visibility="public" typedef="#//unordered_set/iterator">
      <eParameters xsi:type="cpp:CppParameter" name="__x" typedef="#//unordered_set/key_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="equal_range" visibility="public">
      <eGenericType eClassifier="#//pair">
        <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//unordered_set/iterator"/>
        <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//unordered_set/iterator"/>
      </eGenericType>
      <eParameters xsi:type="cpp:CppParameter" name="__x" typedef="#//unordered_set/key_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="begin" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="end" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="max_load_factor" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__z" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="rehash" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="reserve" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n"/>
    </eOperations>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_h" typedef="#//unordered_set/_Hashtable"/>
    <typedefs eClassifier="#//_Hashtable" name="_Hashtable"/>
    <typedefs eTypeParameter="#//_Hashtable/_Key" name="key_type" visibility="public"/>
    <typedefs eTypeParameter="#//_Hashtable/_Value" name="value_type" visibility="public"/>
    <typedefs eTypeParameter="#//_Hashtable/_Equal" name="key_equal" visibility="public"/>
    <typedefs eTypeParameter="#//_Hashtable/_Alloc" name="allocator_type" visibility="public"/>
    <typedefs eTypeParameter="#//_Hashtable/_Value" name="reference" visibility="public"/>
    <typedefs eTypeParameter="#//_Hashtable/_Value" name="const_reference" visibility="public"/>
    <typedefs eClassifier="#//iterator" name="iterator" visibility="public"/>
  </eClassifiers>
  <eClassifiers xsi:type="cpp:CppClass" name="unordered_multiset">
    <eTypeParameters name="_Value"/>
    <eTypeParameters name="_Hash"/>
    <eTypeParameters name="_Pred"/>
    <eTypeParameters name="_Alloc"/>
    <eOperations xsi:type="cpp:CppOperation" name="insert" visibility="public" typedef="#//unordered_multiset/iterator">
      <eParameters xsi:type="cpp:CppParameter" name="__x" typedef="#//unordered_multiset/value_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="insert" visibility="public" typedef="#//unordered_multiset/iterator">
      <eParameters xsi:type="cpp:CppParameter" name="__x" typedef="#//unordered_multiset/value_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="insert" visibility="public" typedef="#//unordered_multiset/iterator">
      <eParameters xsi:type="cpp:CppParameter" name="__hint"/>
      <eParameters xsi:type="cpp:CppParameter" name="__x" typedef="#//unordered_multiset/value_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="insert" visibility="public" typedef="#//unordered_multiset/iterator">
      <eParameters xsi:type="cpp:CppParameter" name="__hint"/>
      <eParameters xsi:type="cpp:CppParameter" name="__x" typedef="#//unordered_multiset/value_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="insert" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__l">
        <eGenericType eClassifier="#//initializer_list">
          <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//unordered_multiset/value_type"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="erase" visibility="public" typedef="#//unordered_multiset/iterator">
      <eParameters xsi:type="cpp:CppParameter" name="__position"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="erase" visibility="public" typedef="#//unordered_multiset/iterator">
      <eParameters xsi:type="cpp:CppParameter" name="__position" typedef="#//unordered_multiset/iterator"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="erase" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__x" typedef="#//unordered_multiset/key_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="erase" visibility="public" typedef="#//unordered_multiset/iterator">
      <eParameters xsi:type="cpp:CppParameter" name="__first"/>
      <eParameters xsi:type="cpp:CppParameter" name="__last"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="swap" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__x">
        <eGenericType eClassifier="#//unordered_multiset">
          <eTypeArguments eTypeParameter="#//unordered_multiset/_Value"/>
          <eTypeArguments eTypeParameter="#//unordered_multiset/_Hash"/>
          <eTypeArguments eTypeParameter="#//unordered_multiset/_Pred"/>
          <eTypeArguments eTypeParameter="#//unordered_multiset/_Alloc"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="find" visibility="public" typedef="#//unordered_multiset/iterator">
      <eParameters xsi:type="cpp:CppParameter" name="__x" typedef="#//unordered_multiset/key_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="equal_range" visibility="public">
      <eGenericType eClassifier="#//pair">
        <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//unordered_multiset/iterator"/>
        <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//unordered_multiset/iterator"/>
      </eGenericType>
      <eParameters xsi:type="cpp:CppParameter" name="__x" typedef="#//unordered_multiset/key_type"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="begin" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="end" visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="max_load_factor" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__z" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="rehash" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n"/>
    </eOperations>
    <eOperations xsi:type="cpp:CppOperation" name="reserve" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
        visibility="public">
      <eParameters xsi:type="cpp:CppParameter" name="__n"/>
    </eOperations>
    <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_h" typedef="#//unordered_multiset/_Hashtable"/>
    <typedefs eClassifier="#//_Hashtable" name="_Hashtable"/>
    <typedefs eTypeParameter="#//_Hashtable/_Key" name="key_type" visibility="public"/>
    <typedefs eTypeParameter="#//_Hashtable/_Value" name="value_type" visibility="public"/>
    <typedefs eTypeParameter="#//_Hashtable/_Equal" name="key_equal" visibility="public"/>
    <typedefs eTypeParameter="#//_Hashtable/_Alloc" name="allocator_type" visibility="public"/>
    <typedefs eTypeParameter="#//_Hashtable/_Value" name="reference" visibility="public"/>
    <typedefs eTypeParameter="#//_Hashtable/_Value" name="const_reference" visibility="public"/>
    <typedefs eClassifier="#//iterator" name="iterator" visibility="public"/>
  </eClassifiers>
  <eSubpackages xsi:type="cpp:CppNamespace" name="inline">
    <eClassifiers xsi:type="cpp:CppClass" name="basic_string">
      <eTypeParameters name="_CharT"/>
      <eTypeParameters name="_CharT"/>
      <eTypeParameters name="_Traits"/>
      <eTypeParameters name="_Alloc"/>
      <eOperations xsi:type="cpp:CppOperation" name="_M_data" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="private">
        <eParameters xsi:type="cpp:CppParameter" name="__p"/>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="_M_length" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="private">
        <eParameters xsi:type="cpp:CppParameter" name="__length"/>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="_M_local_data" visibility="private"/>
      <eOperations xsi:type="cpp:CppOperation" name="_M_capacity" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="private">
        <eParameters xsi:type="cpp:CppParameter" name="__capacity"/>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="_M_set_length" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="private">
        <eParameters xsi:type="cpp:CppParameter" name="__n"/>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="_M_create" visibility="private"/>
      <eOperations xsi:type="cpp:CppOperation" name="_M_dispose" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="private"/>
      <eOperations xsi:type="cpp:CppOperation" name="_M_destroy" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="private">
        <eParameters xsi:type="cpp:CppParameter" name="__size"/>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="_M_construct_aux_2" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="private">
        <eParameters xsi:type="cpp:CppParameter" name="__req"/>
        <eParameters xsi:type="cpp:CppParameter" name="__c">
          <eGenericType eTypeParameter="#//inline/basic_string/_CharT"/>
        </eParameters>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="_M_construct" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="private">
        <eParameters xsi:type="cpp:CppParameter" name="__req"/>
        <eParameters xsi:type="cpp:CppParameter" name="__c">
          <eGenericType eTypeParameter="#//inline/basic_string/_CharT"/>
        </eParameters>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="_S_copy" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="private" static="true">
        <eParameters xsi:type="cpp:CppParameter" name="__d">
          <eGenericType eTypeParameter="#//inline/basic_string/_CharT"/>
        </eParameters>
        <eParameters xsi:type="cpp:CppParameter" name="__s">
          <eGenericType eTypeParameter="#//inline/basic_string/_CharT"/>
        </eParameters>
        <eParameters xsi:type="cpp:CppParameter" name="__n"/>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="_S_move" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="private" static="true">
        <eParameters xsi:type="cpp:CppParameter" name="__d">
          <eGenericType eTypeParameter="#//inline/basic_string/_CharT"/>
        </eParameters>
        <eParameters xsi:type="cpp:CppParameter" name="__s">
          <eGenericType eTypeParameter="#//inline/basic_string/_CharT"/>
        </eParameters>
        <eParameters xsi:type="cpp:CppParameter" name="__n"/>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="_S_assign" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="private" static="true">
        <eParameters xsi:type="cpp:CppParameter" name="__d">
          <eGenericType eTypeParameter="#//inline/basic_string/_CharT"/>
        </eParameters>
        <eParameters xsi:type="cpp:CppParameter" name="__n"/>
        <eParameters xsi:type="cpp:CppParameter" name="__c">
          <eGenericType eTypeParameter="#//inline/basic_string/_CharT"/>
        </eParameters>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="_M_assign" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="private">
        <eParameters xsi:type="cpp:CppParameter" name="__rcs">
          <eGenericType eClassifier="#//inline/basic_string">
            <eTypeArguments eTypeParameter="#//inline/basic_string/_CharT"/>
            <eTypeArguments eTypeParameter="#//inline/basic_string/_Traits"/>
            <eTypeArguments eTypeParameter="#//inline/basic_string/_Alloc"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="_M_mutate" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="private">
        <eParameters xsi:type="cpp:CppParameter" name="__pos"/>
        <eParameters xsi:type="cpp:CppParameter" name="__len1"/>
        <eParameters xsi:type="cpp:CppParameter" name="__s">
          <eGenericType eTypeParameter="#//inline/basic_string/_CharT"/>
        </eParameters>
        <eParameters xsi:type="cpp:CppParameter" name="__len2"/>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="_M_erase" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="private">
        <eParameters xsi:type="cpp:CppParameter" name="__pos"/>
        <eParameters xsi:type="cpp:CppParameter" name="__n"/>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="resize" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="public">
        <eParameters xsi:type="cpp:CppParameter" name="__n"/>
        <eParameters xsi:type="cpp:CppParameter" name="__c">
          <eGenericType eTypeParameter="#//inline/basic_string/_CharT"/>
        </eParameters>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="resize" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="public">
        <eParameters xsi:type="cpp:CppParameter" name="__n"/>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="reserve" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="public"/>
      <eOperations xsi:type="cpp:CppOperation" name="at" visibility="public">
        <eParameters xsi:type="cpp:CppParameter" name="__n"/>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="push_back" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="public">
        <eParameters xsi:type="cpp:CppParameter" name="__c">
          <eGenericType eTypeParameter="#//inline/basic_string/_CharT"/>
        </eParameters>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="insert" eType="#//iterator" visibility="public">
        <eParameters xsi:type="cpp:CppParameter" name="__p"/>
        <eParameters xsi:type="cpp:CppParameter" name="__n"/>
        <eParameters xsi:type="cpp:CppParameter" name="__c">
          <eGenericType eTypeParameter="#//inline/basic_string/_CharT"/>
        </eParameters>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="insert" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="public">
        <eParameters xsi:type="cpp:CppParameter" name="__p" eType="#//iterator"/>
        <eParameters xsi:type="cpp:CppParameter" name="__l">
          <eGenericType eClassifier="#//initializer_list">
            <eTypeArguments eTypeParameter="#//inline/basic_string/_CharT"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="insert" eType="#//iterator" visibility="public">
        <eParameters xsi:type="cpp:CppParameter" name="__p"/>
        <eParameters xsi:type="cpp:CppParameter" name="__c">
          <eGenericType eTypeParameter="#//inline/basic_string/_CharT"/>
        </eParameters>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="erase" eType="#//iterator" visibility="public">
        <eParameters xsi:type="cpp:CppParameter" name="__position"/>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="erase" eType="#//iterator" visibility="public">
        <eParameters xsi:type="cpp:CppParameter" name="__first"/>
        <eParameters xsi:type="cpp:CppParameter" name="__last"/>
      </eOperations>
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="npos" visibility="public"
          static="true"/>
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_dataplus" visibility="private"/>
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_string_length" visibility="private"/>
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="referenced" visibility="private"/>
      <typedefs eTypeParameter="#//inline/basic_string/_Traits" name="traits_type"
          visibility="public"/>
      <typedefs eClassifier="#//reverse_iterator" name="const_reverse_iterator" visibility="public"/>
      <typedefs eClassifier="#//reverse_iterator" name="reverse_iterator" visibility="public">
        <eTypeArguments eClassifier="#//iterator"/>
      </typedefs>
      <nestedClasses name="_Alloc_hider" visibility="private">
        <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_p"/>
      </nestedClasses>
    </eClassifiers>
    <eClassifiers xsi:type="cpp:CppClass" name="basic_stringbuf">
      <eTypeParameters name="_CharT"/>
      <eTypeParameters name="_CharT"/>
      <eTypeParameters name="_Traits"/>
      <eTypeParameters name="_Alloc"/>
      <eOperations xsi:type="cpp:CppOperation" name="swap" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="public">
        <eParameters xsi:type="cpp:CppParameter" name="__rhs">
          <eGenericType eClassifier="#//inline/basic_stringbuf">
            <eTypeArguments eTypeParameter="#//inline/basic_stringbuf/_CharT"/>
            <eTypeArguments eTypeParameter="#//inline/basic_stringbuf/_Traits"/>
            <eTypeArguments eTypeParameter="#//inline/basic_stringbuf/_Alloc"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="str" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="public">
        <eParameters xsi:type="cpp:CppParameter" name="__s" typedef="#//inline/basic_stringbuf/__string_type"/>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="_M_stringbuf_init" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="public">
        <eParameters xsi:type="cpp:CppParameter" name="__mode" typedef="#//ios_base/openmode"/>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="_M_sync" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="public">
        <eParameters xsi:type="cpp:CppParameter" name="__base" typedef="#//inline/basic_stringbuf/char_type"/>
        <eParameters xsi:type="cpp:CppParameter" name="__i"/>
        <eParameters xsi:type="cpp:CppParameter" name="__o"/>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="_M_update_egptr" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="public"/>
      <eOperations xsi:type="cpp:CppOperation" name="_M_pbump" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="public">
        <eParameters xsi:type="cpp:CppParameter" name="__pbeg" typedef="#//inline/basic_stringbuf/char_type"/>
        <eParameters xsi:type="cpp:CppParameter" name="__pend" typedef="#//inline/basic_stringbuf/char_type"/>
        <eParameters xsi:type="cpp:CppParameter" name="__off"/>
      </eOperations>
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_mode" visibility="public"
          typedef="#//ios_base/openmode"/>
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_string" visibility="public"
          typedef="#//inline/basic_stringbuf/__string_type"/>
      <typedefs eTypeParameter="#//inline/basic_stringbuf/_CharT" name="char_type"
          visibility="public"/>
      <typedefs eTypeParameter="#//inline/basic_stringbuf/_Traits" name="traits_type"
          visibility="public"/>
      <typedefs eTypeParameter="#//inline/basic_stringbuf/_Alloc" name="allocator_type"
          visibility="public"/>
      <typedefs eClassifier="#//basic_streambuf" name="__streambuf_type" visibility="public">
        <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//inline/basic_stringbuf/char_type"/>
        <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//inline/basic_stringbuf/traits_type"/>
      </typedefs>
      <typedefs eClassifier="#//inline/basic_string" name="__string_type" visibility="public">
        <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//inline/basic_stringbuf/char_type"/>
        <eTypeArguments eTypeParameter="#//inline/basic_stringbuf/_Traits"/>
        <eTypeArguments eTypeParameter="#//inline/basic_stringbuf/_Alloc"/>
      </typedefs>
      <nestedClasses name="__xfer_bufptrs" visibility="private">
        <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_to">
          <eGenericType eClassifier="#//inline/basic_stringbuf">
            <eTypeArguments eTypeParameter="#//inline/basic_stringbuf/_CharT"/>
            <eTypeArguments eTypeParameter="#//inline/basic_stringbuf/_Traits"/>
            <eTypeArguments eTypeParameter="#//inline/basic_stringbuf/_Alloc"/>
          </eGenericType>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_goff"/>
        <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_poff"/>
      </nestedClasses>
    </eClassifiers>
    <eClassifiers xsi:type="cpp:CppClass" name="basic_istringstream">
      <eTypeParameters name="_CharT"/>
      <eTypeParameters name="_CharT"/>
      <eTypeParameters name="_Traits"/>
      <eTypeParameters name="_Alloc"/>
      <eOperations xsi:type="cpp:CppOperation" name="swap" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="public">
        <eParameters xsi:type="cpp:CppParameter" name="__rhs">
          <eGenericType eClassifier="#//inline/basic_istringstream">
            <eTypeArguments eTypeParameter="#//inline/basic_istringstream/_CharT"/>
            <eTypeArguments eTypeParameter="#//inline/basic_istringstream/_Traits"/>
            <eTypeArguments eTypeParameter="#//inline/basic_istringstream/_Alloc"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="str" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="public">
        <eParameters xsi:type="cpp:CppParameter" name="__s" typedef="#//inline/basic_istringstream/__string_type"/>
      </eOperations>
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_stringbuf" visibility="private"
          typedef="#//inline/basic_istringstream/__stringbuf_type"/>
      <typedefs eTypeParameter="#//inline/basic_istringstream/_CharT" name="char_type"
          visibility="public"/>
      <typedefs eTypeParameter="#//inline/basic_istringstream/_Traits" name="traits_type"
          visibility="public"/>
      <typedefs eTypeParameter="#//inline/basic_istringstream/_Alloc" name="allocator_type"
          visibility="public"/>
      <typedefs eClassifier="#//inline/basic_string" name="__string_type" visibility="public">
        <eTypeArguments eTypeParameter="#//inline/basic_istringstream/_CharT"/>
        <eTypeArguments eTypeParameter="#//inline/basic_istringstream/_Traits"/>
        <eTypeArguments eTypeParameter="#//inline/basic_istringstream/_Alloc"/>
      </typedefs>
      <typedefs eClassifier="#//inline/basic_stringbuf" name="__stringbuf_type" visibility="public">
        <eTypeArguments eTypeParameter="#//inline/basic_istringstream/_CharT"/>
        <eTypeArguments eTypeParameter="#//inline/basic_istringstream/_Traits"/>
        <eTypeArguments eTypeParameter="#//inline/basic_istringstream/_Alloc"/>
      </typedefs>
      <typedefs eClassifier="#//basic_istream" name="__istream_type" visibility="public">
        <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//inline/basic_istringstream/char_type"/>
        <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//inline/basic_istringstream/traits_type"/>
      </typedefs>
    </eClassifiers>
    <eClassifiers xsi:type="cpp:CppClass" name="basic_ostringstream">
      <eTypeParameters name="_CharT"/>
      <eTypeParameters name="_CharT"/>
      <eTypeParameters name="_Traits"/>
      <eTypeParameters name="_Alloc"/>
      <eOperations xsi:type="cpp:CppOperation" name="swap" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="public">
        <eParameters xsi:type="cpp:CppParameter" name="__rhs">
          <eGenericType eClassifier="#//inline/basic_ostringstream">
            <eTypeArguments eTypeParameter="#//inline/basic_ostringstream/_CharT"/>
            <eTypeArguments eTypeParameter="#//inline/basic_ostringstream/_Traits"/>
            <eTypeArguments eTypeParameter="#//inline/basic_ostringstream/_Alloc"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="str" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="public">
        <eParameters xsi:type="cpp:CppParameter" name="__s" typedef="#//inline/basic_ostringstream/__string_type"/>
      </eOperations>
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_stringbuf" visibility="private"
          typedef="#//inline/basic_ostringstream/__stringbuf_type"/>
      <typedefs eTypeParameter="#//inline/basic_ostringstream/_CharT" name="char_type"
          visibility="public"/>
      <typedefs eTypeParameter="#//inline/basic_ostringstream/_Traits" name="traits_type"
          visibility="public"/>
      <typedefs eTypeParameter="#//inline/basic_ostringstream/_Alloc" name="allocator_type"
          visibility="public"/>
      <typedefs eClassifier="#//inline/basic_string" name="__string_type" visibility="public">
        <eTypeArguments eTypeParameter="#//inline/basic_ostringstream/_CharT"/>
        <eTypeArguments eTypeParameter="#//inline/basic_ostringstream/_Traits"/>
        <eTypeArguments eTypeParameter="#//inline/basic_ostringstream/_Alloc"/>
      </typedefs>
      <typedefs eClassifier="#//inline/basic_stringbuf" name="__stringbuf_type" visibility="public">
        <eTypeArguments eTypeParameter="#//inline/basic_ostringstream/_CharT"/>
        <eTypeArguments eTypeParameter="#//inline/basic_ostringstream/_Traits"/>
        <eTypeArguments eTypeParameter="#//inline/basic_ostringstream/_Alloc"/>
      </typedefs>
      <typedefs eClassifier="#//basic_ostream" name="__ostream_type" visibility="public">
        <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//inline/basic_ostringstream/char_type"/>
        <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//inline/basic_ostringstream/traits_type"/>
      </typedefs>
    </eClassifiers>
    <eClassifiers xsi:type="cpp:CppClass" name="basic_stringstream">
      <eTypeParameters name="_CharT"/>
      <eTypeParameters name="_CharT"/>
      <eTypeParameters name="_Traits"/>
      <eTypeParameters name="_Alloc"/>
      <eOperations xsi:type="cpp:CppOperation" name="swap" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="public">
        <eParameters xsi:type="cpp:CppParameter" name="__rhs">
          <eGenericType eClassifier="#//inline/basic_stringstream">
            <eTypeArguments eTypeParameter="#//inline/basic_stringstream/_CharT"/>
            <eTypeArguments eTypeParameter="#//inline/basic_stringstream/_Traits"/>
            <eTypeArguments eTypeParameter="#//inline/basic_stringstream/_Alloc"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations xsi:type="cpp:CppOperation" name="str" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="public">
        <eParameters xsi:type="cpp:CppParameter" name="__s" typedef="#//inline/basic_stringstream/__string_type"/>
      </eOperations>
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_stringbuf" visibility="private"
          typedef="#//inline/basic_stringstream/__stringbuf_type"/>
      <typedefs eTypeParameter="#//inline/basic_stringstream/_CharT" name="char_type"
          visibility="public"/>
      <typedefs eTypeParameter="#//inline/basic_stringstream/_Traits" name="traits_type"
          visibility="public"/>
      <typedefs eTypeParameter="#//inline/basic_stringstream/_Alloc" name="allocator_type"
          visibility="public"/>
      <typedefs eClassifier="#//inline/basic_string" name="__string_type" visibility="public">
        <eTypeArguments eTypeParameter="#//inline/basic_stringstream/_CharT"/>
        <eTypeArguments eTypeParameter="#//inline/basic_stringstream/_Traits"/>
        <eTypeArguments eTypeParameter="#//inline/basic_stringstream/_Alloc"/>
      </typedefs>
      <typedefs eClassifier="#//inline/basic_stringbuf" name="__stringbuf_type" visibility="public">
        <eTypeArguments eTypeParameter="#//inline/basic_stringstream/_CharT"/>
        <eTypeArguments eTypeParameter="#//inline/basic_stringstream/_Traits"/>
        <eTypeArguments eTypeParameter="#//inline/basic_stringstream/_Alloc"/>
      </typedefs>
      <typedefs eClassifier="#//basic_iostream" name="__iostream_type" visibility="public">
        <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//inline/basic_stringstream/char_type"/>
        <eTypeArguments xsi:type="cpp:CppTypedefRef" typedef="#//inline/basic_stringstream/traits_type"/>
      </typedefs>
    </eClassifiers>
    <eClassifiers xsi:type="cpp:CppClass" name="numpunct">
      <eTypeParameters name="_CharT"/>
      <eOperations xsi:type="cpp:CppOperation" name="_M_initialize_numpunct" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
          visibility="public"/>
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="_M_data" visibility="public"
          typedef="#//inline/numpunct/__cache_type"/>
      <eStructuralFeatures xsi:type="cpp:CppAttribute" name="id" eType="#//id" visibility="public"
          static="true"/>
      <typedefs eTypeParameter="#//inline/numpunct/_CharT" name="char_type" visibility="public"/>
      <typedefs eClassifier="#//inline/basic_string" name="string_type" visibility="public">
        <eTypeArguments eTypeParameter="#//inline/numpunct/_CharT"/>
      </typedefs>
      <typedefs eClassifier="#//__numpunct_cache" name="__cache_type" visibility="public">
        <eTypeArguments eTypeParameter="#//inline/numpunct/_CharT"/>
      </typedefs>
    </eClassifiers>
    <eClassifiers xsi:type="cpp:CppClass" name="numpunct_byname">
      <eTypeParameters name="_CharT"/>
      <typedefs eTypeParameter="#//inline/numpunct_byname/_CharT" name="char_type"
          visibility="public"/>
      <typedefs eClassifier="#//inline/basic_string" name="string_type" visibility="public">
        <eTypeArguments eTypeParameter="#//inline/numpunct_byname/_CharT"/>
      </typedefs>
    </eClassifiers>
    <eClassifiers xsi:type="cpp:CppClass" name="collate"/>
    <eClassifiers xsi:type="cpp:CppClass" name="collate_byname"/>
    <eClassifiers xsi:type="cpp:CppClass" name="time_get">
      <eTypeParameters name="_CharT"/>
    </eClassifiers>
    <eClassifiers xsi:type="cpp:CppClass" name="time_get_byname">
      <eTypeParameters name="_CharT"/>
    </eClassifiers>
    <eClassifiers xsi:type="cpp:CppClass" name="money_get">
      <eTypeParameters name="_CharT"/>
    </eClassifiers>
    <eClassifiers xsi:type="cpp:CppClass" name="money_put">
      <eTypeParameters name="_CharT"/>
    </eClassifiers>
    <eClassifiers xsi:type="cpp:CppClass" name="moneypunct"/>
    <eClassifiers xsi:type="cpp:CppClass" name="moneypunct_byname"/>
    <eClassifiers xsi:type="cpp:CppClass" name="messages"/>
    <eClassifiers xsi:type="cpp:CppClass" name="messages_byname"/>
    <eClassifiers xsi:type="cpp:CppClass" name="error_category"/>
    <typedefs eClassifier="#//inline/basic_string" name="string">
      <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
    </typedefs>
    <typedefs eClassifier="#//inline/basic_string" name="wstring">
      <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//wchar_t"/>
    </typedefs>
    <typedefs eClassifier="#//inline/basic_string" name="u16string">
      <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char16_t"/>
    </typedefs>
    <typedefs eClassifier="#//inline/basic_string" name="u32string">
      <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char32_t"/>
    </typedefs>
  </eSubpackages>
  <eSubpackages xsi:type="cpp:CppNamespace" name="rel_ops"/>
  <eSubpackages xsi:type="cpp:CppNamespace" name="placeholders"/>
  <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//unsigned%20long%20int"
      name="size_t"/>
  <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20int"
      name="ptrdiff_t"/>
  <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//unsigned%20short%20int"
      name="uint_least16_t"/>
  <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//unsigned%20int"
      name="uint_least32_t"/>
  <typedefs eClassifier="#//integral_constant" name="true_type"/>
  <typedefs eClassifier="#//integral_constant" name="false_type"/>
  <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20int"
      name="streamoff"/>
  <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20int"
      name="streamsize"/>
  <typedefs eClassifier="#//fpos" name="streampos"/>
  <typedefs eClassifier="#//fpos" name="wstreampos"/>
  <typedefs eClassifier="#//fpos" name="u16streampos"/>
  <typedefs eClassifier="#//fpos" name="u32streampos"/>
  <typedefs eClassifier="#//basic_ios" name="ios">
    <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
  </typedefs>
  <typedefs eClassifier="#//basic_streambuf" name="streambuf">
    <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
  </typedefs>
  <typedefs eClassifier="#//basic_istream" name="istream">
    <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
  </typedefs>
  <typedefs eClassifier="#//basic_ostream" name="ostream">
    <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
  </typedefs>
  <typedefs eClassifier="#//basic_iostream" name="iostream">
    <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
  </typedefs>
  <typedefs eClassifier="#//basic_filebuf" name="filebuf">
    <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
  </typedefs>
  <typedefs eClassifier="#//basic_ifstream" name="ifstream">
    <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
  </typedefs>
  <typedefs eClassifier="#//basic_ofstream" name="ofstream">
    <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
  </typedefs>
  <typedefs eClassifier="#//basic_fstream" name="fstream">
    <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
  </typedefs>
  <typedefs eClassifier="#//basic_ios" name="wios">
    <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//wchar_t"/>
  </typedefs>
  <typedefs eClassifier="#//basic_streambuf" name="wstreambuf">
    <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//wchar_t"/>
  </typedefs>
  <typedefs eClassifier="#//basic_istream" name="wistream">
    <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//wchar_t"/>
  </typedefs>
  <typedefs eClassifier="#//basic_ostream" name="wostream">
    <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//wchar_t"/>
  </typedefs>
  <typedefs eClassifier="#//basic_iostream" name="wiostream">
    <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//wchar_t"/>
  </typedefs>
  <typedefs eClassifier="#//basic_filebuf" name="wfilebuf">
    <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//wchar_t"/>
  </typedefs>
  <typedefs eClassifier="#//basic_ifstream" name="wifstream">
    <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//wchar_t"/>
  </typedefs>
  <typedefs eClassifier="#//basic_ofstream" name="wofstream">
    <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//wchar_t"/>
  </typedefs>
  <typedefs eClassifier="#//basic_fstream" name="wfstream">
    <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//wchar_t"/>
  </typedefs>
  <typedefs eClassifier="#//memory_order" name="memory_order"/>
  <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool" name="__atomic_flag_data_type"/>
  <typedefs eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//unsigned%20long%20int"
      name="_Bit_type"/>
  <operations name="fpclassify" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="fpclassify" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//double"/>
  </operations>
  <operations name="fpclassify" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="isfinite" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="isfinite" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//double"/>
  </operations>
  <operations name="isfinite" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="isinf" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="isinf" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//double"/>
  </operations>
  <operations name="isinf" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="isnan" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="isnan" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//double"/>
  </operations>
  <operations name="isnan" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="isnormal" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="isnormal" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//double"/>
  </operations>
  <operations name="isnormal" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="signbit" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="signbit" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//double"/>
  </operations>
  <operations name="signbit" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="isgreater" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="isgreater" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//double"/>
  </operations>
  <operations name="isgreater" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="isgreaterequal" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="isgreaterequal" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//double"/>
  </operations>
  <operations name="isgreaterequal" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="isless" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="isless" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//double"/>
  </operations>
  <operations name="isless" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="islessequal" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="islessequal" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//double"/>
  </operations>
  <operations name="islessequal" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="islessgreater" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="islessgreater" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//double"/>
  </operations>
  <operations name="islessgreater" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="isunordered" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="isunordered" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//double"/>
  </operations>
  <operations name="isunordered" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="acosh" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="acosh" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="asinh" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="asinh" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="atanh" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="atanh" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="cbrt" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="cbrt" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="copysign" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="copysign" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="erf" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="erf" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="erfc" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="erfc" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="exp2" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="exp2" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="expm1" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="expm1" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="fdim" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="fdim" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="fma" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
    <eParameters xsi:type="cpp:CppParameter" name="__z" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="fma" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__z" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="fmax" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="fmax" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="fmin" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="fmin" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="hypot" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="hypot" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="ilogb" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="ilogb" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="lgamma" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="lgamma" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="llrint" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20long%20int"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="llrint" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20long%20int"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="llround" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20long%20int"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="llround" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20long%20int"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="log1p" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="log1p" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="log2" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="log2" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="logb" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="logb" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="lrint" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20int"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="lrint" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20int"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="lround" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20int"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="lround" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20int"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="nearbyint" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="nearbyint" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="nextafter" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="nextafter" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="nexttoward" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="nexttoward" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="remainder" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="remainder" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__y" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="rint" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="rint" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="round" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="round" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="scalbln" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
    <eParameters xsi:type="cpp:CppParameter" name="__ex" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20int"/>
  </operations>
  <operations name="scalbln" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__ex" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20int"/>
  </operations>
  <operations name="scalbn" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
    <eParameters xsi:type="cpp:CppParameter" name="__ex" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"/>
  </operations>
  <operations name="scalbn" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
    <eParameters xsi:type="cpp:CppParameter" name="__ex" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//int"/>
  </operations>
  <operations name="tgamma" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="tgamma" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="trunc" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//float"/>
  </operations>
  <operations name="trunc" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__x" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//long%20double"/>
  </operations>
  <operations name="unexpected" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="rethrow_exception" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="__throw_bad_exception" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="__throw_bad_alloc" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="__throw_bad_cast" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="__throw_bad_typeid" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="__throw_logic_error" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="__throw_domain_error" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="__throw_invalid_argument" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="__throw_length_error" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="__throw_out_of_range" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="__throw_out_of_range_fmt" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="__throw_runtime_error" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="__throw_range_error" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="__throw_overflow_error" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="__throw_underflow_error" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="__throw_ios_failure" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="__throw_system_error" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="__throw_future_error" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="__throw_bad_function_call" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="set_new_handler" static="true"/>
  <operations name="_Hash_bytes" static="true" typedef="#//size_t">
    <eParameters xsi:type="cpp:CppParameter" name="__ptr" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"/>
    <eParameters xsi:type="cpp:CppParameter" name="__len" typedef="#//size_t"/>
    <eParameters xsi:type="cpp:CppParameter" name="__seed" typedef="#//size_t"/>
  </operations>
  <operations name="_Fnv_hash_bytes" static="true" typedef="#//size_t">
    <eParameters xsi:type="cpp:CppParameter" name="__ptr" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"/>
    <eParameters xsi:type="cpp:CppParameter" name="__len" typedef="#//size_t"/>
    <eParameters xsi:type="cpp:CppParameter" name="__seed" typedef="#//size_t"/>
  </operations>
  <operations name="__copy_streambufs_eof" static="true" typedef="#//streamsize">
    <eParameters xsi:type="cpp:CppParameter" name="__sbin">
      <eGenericType eClassifier="#//basic_streambuf">
        <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
      </eGenericType>
    </eParameters>
    <eParameters xsi:type="cpp:CppParameter" name="__sbout">
      <eGenericType eClassifier="#//basic_streambuf">
        <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
      </eGenericType>
    </eParameters>
    <eParameters xsi:type="cpp:CppParameter" name="__ineof" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"/>
  </operations>
  <operations name="__copy_streambufs_eof" static="true" typedef="#//streamsize">
    <eParameters xsi:type="cpp:CppParameter" name="__sbin">
      <eGenericType eClassifier="#//basic_streambuf">
        <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//wchar_t"/>
      </eGenericType>
    </eParameters>
    <eParameters xsi:type="cpp:CppParameter" name="__sbout">
      <eGenericType eClassifier="#//basic_streambuf">
        <eTypeArguments eClassifier="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//wchar_t"/>
      </eGenericType>
    </eParameters>
    <eParameters xsi:type="cpp:CppParameter" name="__ineof" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"/>
  </operations>
  <operations name="__convert_to_v" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="__convert_to_v" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="__convert_to_v" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//void"
      static="true"/>
  <operations name="__verify_grouping" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//bool"
      static="true">
    <eParameters xsi:type="cpp:CppParameter" name="__grouping" eType="ecore:EDataType http://www.dfki.de/SPECifIC/cpp#//char"/>
    <eParameters xsi:type="cpp:CppParameter" name="__grouping_size" typedef="#//size_t"/>
    <eParameters xsi:type="cpp:CppParameter" name="__grouping_tmp"/>
  </operations>
</cpp:CppNamespace>
